Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    comentarioMultilinea
    comentarioUnilinea
    errorCadenaCaracteres
    errorComentarioMultilinea

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> CLASS_DECL_LIST
Rule 2     PROGRAMA -> epsilon
Rule 3     CLASS_DECL_LIST -> CLASS_DECL
Rule 4     CLASS_DECL_LIST -> CLASS_DECL CLASS_DECL_LIST
Rule 5     CLASS_DECL -> class id extends id { FIELD_OR_METHOD_DECL_LIST }
Rule 6     CLASS_DECL -> class id extends id { }
Rule 7     CLASS_DECL -> class id { FIELD_OR_METHOD_DECL_LIST }
Rule 8     CLASS_DECL -> class id { }
Rule 9     FIELD_OR_METHOD_DECL_LIST -> FIELD_DECL
Rule 10    FIELD_OR_METHOD_DECL_LIST -> FIELD_DECL FIELD_OR_METHOD_DECL_LIST
Rule 11    FIELD_OR_METHOD_DECL_LIST -> METHOD_DECL
Rule 12    FIELD_OR_METHOD_DECL_LIST -> METHOD_DECL FIELD_OR_METHOD_DECL_LIST
Rule 13    FIELD_DECL -> TYPE id ;
Rule 14    FIELD_DECL -> TYPE id LIST_AUX_IDS ;
Rule 15    LIST_AUX_IDS -> , id
Rule 16    LIST_AUX_IDS -> , id LIST_AUX_IDS
Rule 17    METHOD_DECL -> TYPE id ( ) BLOCK
Rule 18    METHOD_DECL -> TYPE id ( FORMALS ) BLOCK
Rule 19    METHOD_DECL -> void id ( ) BLOCK
Rule 20    METHOD_DECL -> void id ( FORMALS ) BLOCK
Rule 21    FORMALS -> TYPE id
Rule 22    FORMALS -> TYPE id , FORMALS
Rule 23    TYPE -> int
Rule 24    TYPE -> boolean
Rule 25    TYPE -> string
Rule 26    TYPE -> id
Rule 27    TYPE -> TYPE [ ]
Rule 28    BLOCK -> { }
Rule 29    BLOCK -> { VAR_DECL_STATEMENTS_LIST }
Rule 30    VAR_DECL_STATEMENTS_LIST -> VAR_DECL
Rule 31    VAR_DECL_STATEMENTS_LIST -> VAR_DECL VAR_DECL_STATEMENTS_LIST
Rule 32    VAR_DECL_STATEMENTS_LIST -> STATEMENT
Rule 33    VAR_DECL_STATEMENTS_LIST -> STATEMENT VAR_DECL_STATEMENTS_LIST
Rule 34    VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ;
Rule 35    VAR_DECL -> TYPE id ;
Rule 36    VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ;
Rule 37    VAR_DECL -> TYPE id = EXPRESSION ;
Rule 38    LIST_IDS_EXPRESSIONS -> , id
Rule 39    LIST_IDS_EXPRESSIONS -> , id = EXPRESSION
Rule 40    LIST_IDS_EXPRESSIONS -> , id LIST_IDS_EXPRESSIONS
Rule 41    LIST_IDS_EXPRESSIONS -> , id = EXPRESSION LIST_IDS_EXPRESSIONS
Rule 42    STATEMENT -> ASSIGN ;
Rule 43    STATEMENT -> CALL ;
Rule 44    STATEMENT -> return EXPRESSION ;
Rule 45    STATEMENT -> return ;
Rule 46    STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT
Rule 47    STATEMENT -> if ( EXPRESSION ) STATEMENT
Rule 48    STATEMENT -> while ( EXPRESSION ) STATEMENT
Rule 49    STATEMENT -> break ;
Rule 50    STATEMENT -> continue ;
Rule 51    STATEMENT -> BLOCK
Rule 52    ASSIGN -> LOCATION = EXPRESSION
Rule 53    LOCATION -> id
Rule 54    LOCATION -> EXPRESSION . id
Rule 55    LOCATION -> id [ EXPRESSION ]
Rule 56    CALL -> METHOD ( ACTUALS )
Rule 57    CALL -> METHOD ( )
Rule 58    METHOD -> id
Rule 59    METHOD -> EXPRESSION . id
Rule 60    ACTUALS -> EXPRESSION
Rule 61    ACTUALS -> EXPRESSION , ACTUALS
Rule 62    EXPRESSION -> LOCATION
Rule 63    EXPRESSION -> CALL
Rule 64    EXPRESSION -> this
Rule 65    EXPRESSION -> new id ( )
Rule 66    EXPRESSION -> new TYPE [ EXPRESSION ]
Rule 67    EXPRESSION -> EXPRESSION . length
Rule 68    EXPRESSION -> BINARY_EXPRESSION
Rule 69    EXPRESSION -> ! EXPRESSION
Rule 70    EXPRESSION -> - EXPRESSION
Rule 71    EXPRESSION -> LITERAL
Rule 72    EXPRESSION -> ( EXPRESSION )
Rule 73    BINARY_EXPRESSION -> EXPRESSION + EXPRESSION
Rule 74    BINARY_EXPRESSION -> EXPRESSION - EXPRESSION
Rule 75    BINARY_EXPRESSION -> EXPRESSION * EXPRESSION
Rule 76    BINARY_EXPRESSION -> EXPRESSION / EXPRESSION
Rule 77    BINARY_EXPRESSION -> EXPRESSION % EXPRESSION
Rule 78    BINARY_EXPRESSION -> EXPRESSION y EXPRESSION
Rule 79    BINARY_EXPRESSION -> EXPRESSION o EXPRESSION
Rule 80    BINARY_EXPRESSION -> EXPRESSION < EXPRESSION
Rule 81    BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION
Rule 82    BINARY_EXPRESSION -> EXPRESSION > EXPRESSION
Rule 83    BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION
Rule 84    BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION
Rule 85    BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION
Rule 86    LITERAL -> numero
Rule 87    LITERAL -> binario
Rule 88    LITERAL -> hexa
Rule 89    LITERAL -> cientifico
Rule 90    LITERAL -> cadenaCaracteres
Rule 91    LITERAL -> true
Rule 92    LITERAL -> false
Rule 93    LITERAL -> null
Rule 94    epsilon -> <empty>

Terminals, with rules where they appear

!                    : 69
%                    : 77
(                    : 17 18 19 20 46 47 48 56 57 65 72
)                    : 17 18 19 20 46 47 48 56 57 65 72
*                    : 75
+                    : 73
,                    : 15 16 22 38 39 40 41 61
-                    : 70 74
.                    : 54 59 67
/                    : 76
;                    : 13 14 34 35 36 37 42 43 44 45 49 50
<                    : 80
=                    : 36 37 39 41 52
>                    : 82
[                    : 27 55 66
]                    : 27 55 66
binario              : 87
boolean              : 24
break                : 49
cadenaCaracteres     : 90
cientifico           : 89
class                : 5 6 7 8
comentarioMultilinea : 
comentarioUnilinea   : 
comparador           : 84
continue             : 50
else                 : 46
error                : 
errorCadenaCaracteres : 
errorComentarioMultilinea : 
extends              : 5 6
false                : 92
hexa                 : 88
id                   : 5 5 6 6 7 8 13 14 15 16 17 18 19 20 21 22 26 34 35 36 37 38 39 40 41 53 54 55 58 59 65
if                   : 46 47
int                  : 23
length               : 67
mayorIgual           : 83
menorIgual           : 81
new                  : 65 66
noIgual              : 85
null                 : 93
numero               : 86
o                    : 79
return               : 44 45
string               : 25
this                 : 64
true                 : 91
void                 : 19 20
while                : 48
y                    : 78
{                    : 5 6 7 8 28 29
}                    : 5 6 7 8 28 29

Nonterminals, with rules where they appear

ACTUALS              : 56 61
ASSIGN               : 42
BINARY_EXPRESSION    : 68
BLOCK                : 17 18 19 20 51
CALL                 : 43 63
CLASS_DECL           : 3 4
CLASS_DECL_LIST      : 1 4
EXPRESSION           : 36 37 39 41 44 46 47 48 52 54 55 59 60 61 66 67 69 70 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85
FIELD_DECL           : 9 10
FIELD_OR_METHOD_DECL_LIST : 5 7 10 12
FORMALS              : 18 20 22
LIST_AUX_IDS         : 14 16
LIST_IDS_EXPRESSIONS : 34 36 40 41
LITERAL              : 71
LOCATION             : 52 62
METHOD               : 56 57
METHOD_DECL          : 11 12
PROGRAMA             : 0
STATEMENT            : 32 33 46 46 47 48
TYPE                 : 13 14 17 18 21 22 27 34 35 36 37 66
VAR_DECL             : 30 31
VAR_DECL_STATEMENTS_LIST : 29 31 33
epsilon              : 2

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . CLASS_DECL_LIST
    (2) PROGRAMA -> . epsilon
    (3) CLASS_DECL_LIST -> . CLASS_DECL
    (4) CLASS_DECL_LIST -> . CLASS_DECL CLASS_DECL_LIST
    (94) epsilon -> .
    (5) CLASS_DECL -> . class id extends id { FIELD_OR_METHOD_DECL_LIST }
    (6) CLASS_DECL -> . class id extends id { }
    (7) CLASS_DECL -> . class id { FIELD_OR_METHOD_DECL_LIST }
    (8) CLASS_DECL -> . class id { }

    $end            reduce using rule 94 (epsilon -> .)
    class           shift and go to state 2

    CLASS_DECL_LIST                shift and go to state 4
    CLASS_DECL                     shift and go to state 3
    PROGRAMA                       shift and go to state 5
    epsilon                        shift and go to state 1

state 1

    (2) PROGRAMA -> epsilon .

    $end            reduce using rule 2 (PROGRAMA -> epsilon .)


state 2

    (5) CLASS_DECL -> class . id extends id { FIELD_OR_METHOD_DECL_LIST }
    (6) CLASS_DECL -> class . id extends id { }
    (7) CLASS_DECL -> class . id { FIELD_OR_METHOD_DECL_LIST }
    (8) CLASS_DECL -> class . id { }

    id              shift and go to state 6


state 3

    (3) CLASS_DECL_LIST -> CLASS_DECL .
    (4) CLASS_DECL_LIST -> CLASS_DECL . CLASS_DECL_LIST
    (3) CLASS_DECL_LIST -> . CLASS_DECL
    (4) CLASS_DECL_LIST -> . CLASS_DECL CLASS_DECL_LIST
    (5) CLASS_DECL -> . class id extends id { FIELD_OR_METHOD_DECL_LIST }
    (6) CLASS_DECL -> . class id extends id { }
    (7) CLASS_DECL -> . class id { FIELD_OR_METHOD_DECL_LIST }
    (8) CLASS_DECL -> . class id { }

    $end            reduce using rule 3 (CLASS_DECL_LIST -> CLASS_DECL .)
    class           shift and go to state 2

    CLASS_DECL_LIST                shift and go to state 7
    CLASS_DECL                     shift and go to state 3

state 4

    (1) PROGRAMA -> CLASS_DECL_LIST .

    $end            reduce using rule 1 (PROGRAMA -> CLASS_DECL_LIST .)


state 5

    (0) S' -> PROGRAMA .



state 6

    (5) CLASS_DECL -> class id . extends id { FIELD_OR_METHOD_DECL_LIST }
    (6) CLASS_DECL -> class id . extends id { }
    (7) CLASS_DECL -> class id . { FIELD_OR_METHOD_DECL_LIST }
    (8) CLASS_DECL -> class id . { }

    extends         shift and go to state 8
    {               shift and go to state 9


state 7

    (4) CLASS_DECL_LIST -> CLASS_DECL CLASS_DECL_LIST .

    $end            reduce using rule 4 (CLASS_DECL_LIST -> CLASS_DECL CLASS_DECL_LIST .)


state 8

    (5) CLASS_DECL -> class id extends . id { FIELD_OR_METHOD_DECL_LIST }
    (6) CLASS_DECL -> class id extends . id { }

    id              shift and go to state 10


state 9

    (7) CLASS_DECL -> class id { . FIELD_OR_METHOD_DECL_LIST }
    (8) CLASS_DECL -> class id { . }
    (9) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL
    (10) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL FIELD_OR_METHOD_DECL_LIST
    (11) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL
    (12) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL FIELD_OR_METHOD_DECL_LIST
    (13) FIELD_DECL -> . TYPE id ;
    (14) FIELD_DECL -> . TYPE id LIST_AUX_IDS ;
    (17) METHOD_DECL -> . TYPE id ( ) BLOCK
    (18) METHOD_DECL -> . TYPE id ( FORMALS ) BLOCK
    (19) METHOD_DECL -> . void id ( ) BLOCK
    (20) METHOD_DECL -> . void id ( FORMALS ) BLOCK
    (23) TYPE -> . int
    (24) TYPE -> . boolean
    (25) TYPE -> . string
    (26) TYPE -> . id
    (27) TYPE -> . TYPE [ ]

    }               shift and go to state 20
    void            shift and go to state 13
    int             shift and go to state 16
    boolean         shift and go to state 17
    string          shift and go to state 11
    id              shift and go to state 18

    FIELD_DECL                     shift and go to state 12
    METHOD_DECL                    shift and go to state 14
    FIELD_OR_METHOD_DECL_LIST      shift and go to state 15
    TYPE                           shift and go to state 19

state 10

    (5) CLASS_DECL -> class id extends id . { FIELD_OR_METHOD_DECL_LIST }
    (6) CLASS_DECL -> class id extends id . { }

    {               shift and go to state 21


state 11

    (25) TYPE -> string .

    id              reduce using rule 25 (TYPE -> string .)
    [               reduce using rule 25 (TYPE -> string .)


state 12

    (9) FIELD_OR_METHOD_DECL_LIST -> FIELD_DECL .
    (10) FIELD_OR_METHOD_DECL_LIST -> FIELD_DECL . FIELD_OR_METHOD_DECL_LIST
    (9) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL
    (10) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL FIELD_OR_METHOD_DECL_LIST
    (11) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL
    (12) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL FIELD_OR_METHOD_DECL_LIST
    (13) FIELD_DECL -> . TYPE id ;
    (14) FIELD_DECL -> . TYPE id LIST_AUX_IDS ;
    (17) METHOD_DECL -> . TYPE id ( ) BLOCK
    (18) METHOD_DECL -> . TYPE id ( FORMALS ) BLOCK
    (19) METHOD_DECL -> . void id ( ) BLOCK
    (20) METHOD_DECL -> . void id ( FORMALS ) BLOCK
    (23) TYPE -> . int
    (24) TYPE -> . boolean
    (25) TYPE -> . string
    (26) TYPE -> . id
    (27) TYPE -> . TYPE [ ]

    }               reduce using rule 9 (FIELD_OR_METHOD_DECL_LIST -> FIELD_DECL .)
    void            shift and go to state 13
    int             shift and go to state 16
    boolean         shift and go to state 17
    string          shift and go to state 11
    id              shift and go to state 18

    FIELD_DECL                     shift and go to state 12
    METHOD_DECL                    shift and go to state 14
    FIELD_OR_METHOD_DECL_LIST      shift and go to state 22
    TYPE                           shift and go to state 19

state 13

    (19) METHOD_DECL -> void . id ( ) BLOCK
    (20) METHOD_DECL -> void . id ( FORMALS ) BLOCK

    id              shift and go to state 23


state 14

    (11) FIELD_OR_METHOD_DECL_LIST -> METHOD_DECL .
    (12) FIELD_OR_METHOD_DECL_LIST -> METHOD_DECL . FIELD_OR_METHOD_DECL_LIST
    (9) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL
    (10) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL FIELD_OR_METHOD_DECL_LIST
    (11) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL
    (12) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL FIELD_OR_METHOD_DECL_LIST
    (13) FIELD_DECL -> . TYPE id ;
    (14) FIELD_DECL -> . TYPE id LIST_AUX_IDS ;
    (17) METHOD_DECL -> . TYPE id ( ) BLOCK
    (18) METHOD_DECL -> . TYPE id ( FORMALS ) BLOCK
    (19) METHOD_DECL -> . void id ( ) BLOCK
    (20) METHOD_DECL -> . void id ( FORMALS ) BLOCK
    (23) TYPE -> . int
    (24) TYPE -> . boolean
    (25) TYPE -> . string
    (26) TYPE -> . id
    (27) TYPE -> . TYPE [ ]

    }               reduce using rule 11 (FIELD_OR_METHOD_DECL_LIST -> METHOD_DECL .)
    void            shift and go to state 13
    int             shift and go to state 16
    boolean         shift and go to state 17
    string          shift and go to state 11
    id              shift and go to state 18

    FIELD_DECL                     shift and go to state 12
    METHOD_DECL                    shift and go to state 14
    FIELD_OR_METHOD_DECL_LIST      shift and go to state 24
    TYPE                           shift and go to state 19

state 15

    (7) CLASS_DECL -> class id { FIELD_OR_METHOD_DECL_LIST . }

    }               shift and go to state 25


state 16

    (23) TYPE -> int .

    id              reduce using rule 23 (TYPE -> int .)
    [               reduce using rule 23 (TYPE -> int .)


state 17

    (24) TYPE -> boolean .

    id              reduce using rule 24 (TYPE -> boolean .)
    [               reduce using rule 24 (TYPE -> boolean .)


state 18

    (26) TYPE -> id .

    id              reduce using rule 26 (TYPE -> id .)
    [               reduce using rule 26 (TYPE -> id .)


state 19

    (13) FIELD_DECL -> TYPE . id ;
    (14) FIELD_DECL -> TYPE . id LIST_AUX_IDS ;
    (17) METHOD_DECL -> TYPE . id ( ) BLOCK
    (18) METHOD_DECL -> TYPE . id ( FORMALS ) BLOCK
    (27) TYPE -> TYPE . [ ]

    id              shift and go to state 27
    [               shift and go to state 26


state 20

    (8) CLASS_DECL -> class id { } .

    class           reduce using rule 8 (CLASS_DECL -> class id { } .)
    $end            reduce using rule 8 (CLASS_DECL -> class id { } .)


state 21

    (5) CLASS_DECL -> class id extends id { . FIELD_OR_METHOD_DECL_LIST }
    (6) CLASS_DECL -> class id extends id { . }
    (9) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL
    (10) FIELD_OR_METHOD_DECL_LIST -> . FIELD_DECL FIELD_OR_METHOD_DECL_LIST
    (11) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL
    (12) FIELD_OR_METHOD_DECL_LIST -> . METHOD_DECL FIELD_OR_METHOD_DECL_LIST
    (13) FIELD_DECL -> . TYPE id ;
    (14) FIELD_DECL -> . TYPE id LIST_AUX_IDS ;
    (17) METHOD_DECL -> . TYPE id ( ) BLOCK
    (18) METHOD_DECL -> . TYPE id ( FORMALS ) BLOCK
    (19) METHOD_DECL -> . void id ( ) BLOCK
    (20) METHOD_DECL -> . void id ( FORMALS ) BLOCK
    (23) TYPE -> . int
    (24) TYPE -> . boolean
    (25) TYPE -> . string
    (26) TYPE -> . id
    (27) TYPE -> . TYPE [ ]

    }               shift and go to state 29
    void            shift and go to state 13
    int             shift and go to state 16
    boolean         shift and go to state 17
    string          shift and go to state 11
    id              shift and go to state 18

    FIELD_DECL                     shift and go to state 12
    METHOD_DECL                    shift and go to state 14
    FIELD_OR_METHOD_DECL_LIST      shift and go to state 28
    TYPE                           shift and go to state 19

state 22

    (10) FIELD_OR_METHOD_DECL_LIST -> FIELD_DECL FIELD_OR_METHOD_DECL_LIST .

    }               reduce using rule 10 (FIELD_OR_METHOD_DECL_LIST -> FIELD_DECL FIELD_OR_METHOD_DECL_LIST .)


state 23

    (19) METHOD_DECL -> void id . ( ) BLOCK
    (20) METHOD_DECL -> void id . ( FORMALS ) BLOCK

    (               shift and go to state 30


state 24

    (12) FIELD_OR_METHOD_DECL_LIST -> METHOD_DECL FIELD_OR_METHOD_DECL_LIST .

    }               reduce using rule 12 (FIELD_OR_METHOD_DECL_LIST -> METHOD_DECL FIELD_OR_METHOD_DECL_LIST .)


state 25

    (7) CLASS_DECL -> class id { FIELD_OR_METHOD_DECL_LIST } .

    class           reduce using rule 7 (CLASS_DECL -> class id { FIELD_OR_METHOD_DECL_LIST } .)
    $end            reduce using rule 7 (CLASS_DECL -> class id { FIELD_OR_METHOD_DECL_LIST } .)


state 26

    (27) TYPE -> TYPE [ . ]

    ]               shift and go to state 31


state 27

    (13) FIELD_DECL -> TYPE id . ;
    (14) FIELD_DECL -> TYPE id . LIST_AUX_IDS ;
    (17) METHOD_DECL -> TYPE id . ( ) BLOCK
    (18) METHOD_DECL -> TYPE id . ( FORMALS ) BLOCK
    (15) LIST_AUX_IDS -> . , id
    (16) LIST_AUX_IDS -> . , id LIST_AUX_IDS

    ;               shift and go to state 35
    (               shift and go to state 32
    ,               shift and go to state 33

    LIST_AUX_IDS                   shift and go to state 34

state 28

    (5) CLASS_DECL -> class id extends id { FIELD_OR_METHOD_DECL_LIST . }

    }               shift and go to state 36


state 29

    (6) CLASS_DECL -> class id extends id { } .

    class           reduce using rule 6 (CLASS_DECL -> class id extends id { } .)
    $end            reduce using rule 6 (CLASS_DECL -> class id extends id { } .)


state 30

    (19) METHOD_DECL -> void id ( . ) BLOCK
    (20) METHOD_DECL -> void id ( . FORMALS ) BLOCK
    (21) FORMALS -> . TYPE id
    (22) FORMALS -> . TYPE id , FORMALS
    (23) TYPE -> . int
    (24) TYPE -> . boolean
    (25) TYPE -> . string
    (26) TYPE -> . id
    (27) TYPE -> . TYPE [ ]

    )               shift and go to state 37
    int             shift and go to state 16
    boolean         shift and go to state 17
    string          shift and go to state 11
    id              shift and go to state 18

    TYPE                           shift and go to state 38
    FORMALS                        shift and go to state 39

state 31

    (27) TYPE -> TYPE [ ] .

    id              reduce using rule 27 (TYPE -> TYPE [ ] .)
    [               reduce using rule 27 (TYPE -> TYPE [ ] .)


state 32

    (17) METHOD_DECL -> TYPE id ( . ) BLOCK
    (18) METHOD_DECL -> TYPE id ( . FORMALS ) BLOCK
    (21) FORMALS -> . TYPE id
    (22) FORMALS -> . TYPE id , FORMALS
    (23) TYPE -> . int
    (24) TYPE -> . boolean
    (25) TYPE -> . string
    (26) TYPE -> . id
    (27) TYPE -> . TYPE [ ]

    )               shift and go to state 40
    int             shift and go to state 16
    boolean         shift and go to state 17
    string          shift and go to state 11
    id              shift and go to state 18

    TYPE                           shift and go to state 38
    FORMALS                        shift and go to state 41

state 33

    (15) LIST_AUX_IDS -> , . id
    (16) LIST_AUX_IDS -> , . id LIST_AUX_IDS

    id              shift and go to state 42


state 34

    (14) FIELD_DECL -> TYPE id LIST_AUX_IDS . ;

    ;               shift and go to state 43


state 35

    (13) FIELD_DECL -> TYPE id ; .

    void            reduce using rule 13 (FIELD_DECL -> TYPE id ; .)
    int             reduce using rule 13 (FIELD_DECL -> TYPE id ; .)
    boolean         reduce using rule 13 (FIELD_DECL -> TYPE id ; .)
    string          reduce using rule 13 (FIELD_DECL -> TYPE id ; .)
    id              reduce using rule 13 (FIELD_DECL -> TYPE id ; .)
    }               reduce using rule 13 (FIELD_DECL -> TYPE id ; .)


state 36

    (5) CLASS_DECL -> class id extends id { FIELD_OR_METHOD_DECL_LIST } .

    class           reduce using rule 5 (CLASS_DECL -> class id extends id { FIELD_OR_METHOD_DECL_LIST } .)
    $end            reduce using rule 5 (CLASS_DECL -> class id extends id { FIELD_OR_METHOD_DECL_LIST } .)


state 37

    (19) METHOD_DECL -> void id ( ) . BLOCK
    (28) BLOCK -> . { }
    (29) BLOCK -> . { VAR_DECL_STATEMENTS_LIST }

    {               shift and go to state 44

    BLOCK                          shift and go to state 45

state 38

    (21) FORMALS -> TYPE . id
    (22) FORMALS -> TYPE . id , FORMALS
    (27) TYPE -> TYPE . [ ]

    id              shift and go to state 46
    [               shift and go to state 26


state 39

    (20) METHOD_DECL -> void id ( FORMALS . ) BLOCK

    )               shift and go to state 47


state 40

    (17) METHOD_DECL -> TYPE id ( ) . BLOCK
    (28) BLOCK -> . { }
    (29) BLOCK -> . { VAR_DECL_STATEMENTS_LIST }

    {               shift and go to state 44

    BLOCK                          shift and go to state 48

state 41

    (18) METHOD_DECL -> TYPE id ( FORMALS . ) BLOCK

    )               shift and go to state 49


state 42

    (15) LIST_AUX_IDS -> , id .
    (16) LIST_AUX_IDS -> , id . LIST_AUX_IDS
    (15) LIST_AUX_IDS -> . , id
    (16) LIST_AUX_IDS -> . , id LIST_AUX_IDS

    ;               reduce using rule 15 (LIST_AUX_IDS -> , id .)
    ,               shift and go to state 33

    LIST_AUX_IDS                   shift and go to state 50

state 43

    (14) FIELD_DECL -> TYPE id LIST_AUX_IDS ; .

    void            reduce using rule 14 (FIELD_DECL -> TYPE id LIST_AUX_IDS ; .)
    int             reduce using rule 14 (FIELD_DECL -> TYPE id LIST_AUX_IDS ; .)
    boolean         reduce using rule 14 (FIELD_DECL -> TYPE id LIST_AUX_IDS ; .)
    string          reduce using rule 14 (FIELD_DECL -> TYPE id LIST_AUX_IDS ; .)
    id              reduce using rule 14 (FIELD_DECL -> TYPE id LIST_AUX_IDS ; .)
    }               reduce using rule 14 (FIELD_DECL -> TYPE id LIST_AUX_IDS ; .)


state 44

    (28) BLOCK -> { . }
    (29) BLOCK -> { . VAR_DECL_STATEMENTS_LIST }
    (30) VAR_DECL_STATEMENTS_LIST -> . VAR_DECL
    (31) VAR_DECL_STATEMENTS_LIST -> . VAR_DECL VAR_DECL_STATEMENTS_LIST
    (32) VAR_DECL_STATEMENTS_LIST -> . STATEMENT
    (33) VAR_DECL_STATEMENTS_LIST -> . STATEMENT VAR_DECL_STATEMENTS_LIST
    (34) VAR_DECL -> . TYPE id LIST_IDS_EXPRESSIONS ;
    (35) VAR_DECL -> . TYPE id ;
    (36) VAR_DECL -> . TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ;
    (37) VAR_DECL -> . TYPE id = EXPRESSION ;
    (42) STATEMENT -> . ASSIGN ;
    (43) STATEMENT -> . CALL ;
    (44) STATEMENT -> . return EXPRESSION ;
    (45) STATEMENT -> . return ;
    (46) STATEMENT -> . if ( EXPRESSION ) STATEMENT else STATEMENT
    (47) STATEMENT -> . if ( EXPRESSION ) STATEMENT
    (48) STATEMENT -> . while ( EXPRESSION ) STATEMENT
    (49) STATEMENT -> . break ;
    (50) STATEMENT -> . continue ;
    (51) STATEMENT -> . BLOCK
    (23) TYPE -> . int
    (24) TYPE -> . boolean
    (25) TYPE -> . string
    (26) TYPE -> . id
    (27) TYPE -> . TYPE [ ]
    (52) ASSIGN -> . LOCATION = EXPRESSION
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (28) BLOCK -> . { }
    (29) BLOCK -> . { VAR_DECL_STATEMENTS_LIST }
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null

    }               shift and go to state 82
    return          shift and go to state 65
    if              shift and go to state 56
    while           shift and go to state 78
    break           shift and go to state 68
    continue        shift and go to state 79
    int             shift and go to state 16
    boolean         shift and go to state 17
    string          shift and go to state 11
    id              shift and go to state 54
    {               shift and go to state 44
    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    EXPRESSION                     shift and go to state 74
    LITERAL                        shift and go to state 69
    VAR_DECL                       shift and go to state 67
    METHOD                         shift and go to state 76
    CALL                           shift and go to state 80
    VAR_DECL_STATEMENTS_LIST       shift and go to state 75
    STATEMENT                      shift and go to state 71
    TYPE                           shift and go to state 81
    ASSIGN                         shift and go to state 64
    BLOCK                          shift and go to state 55
    LOCATION                       shift and go to state 62

state 45

    (19) METHOD_DECL -> void id ( ) BLOCK .

    void            reduce using rule 19 (METHOD_DECL -> void id ( ) BLOCK .)
    int             reduce using rule 19 (METHOD_DECL -> void id ( ) BLOCK .)
    boolean         reduce using rule 19 (METHOD_DECL -> void id ( ) BLOCK .)
    string          reduce using rule 19 (METHOD_DECL -> void id ( ) BLOCK .)
    id              reduce using rule 19 (METHOD_DECL -> void id ( ) BLOCK .)
    }               reduce using rule 19 (METHOD_DECL -> void id ( ) BLOCK .)


state 46

    (21) FORMALS -> TYPE id .
    (22) FORMALS -> TYPE id . , FORMALS

    )               reduce using rule 21 (FORMALS -> TYPE id .)
    ,               shift and go to state 83


state 47

    (20) METHOD_DECL -> void id ( FORMALS ) . BLOCK
    (28) BLOCK -> . { }
    (29) BLOCK -> . { VAR_DECL_STATEMENTS_LIST }

    {               shift and go to state 44

    BLOCK                          shift and go to state 84

state 48

    (17) METHOD_DECL -> TYPE id ( ) BLOCK .

    void            reduce using rule 17 (METHOD_DECL -> TYPE id ( ) BLOCK .)
    int             reduce using rule 17 (METHOD_DECL -> TYPE id ( ) BLOCK .)
    boolean         reduce using rule 17 (METHOD_DECL -> TYPE id ( ) BLOCK .)
    string          reduce using rule 17 (METHOD_DECL -> TYPE id ( ) BLOCK .)
    id              reduce using rule 17 (METHOD_DECL -> TYPE id ( ) BLOCK .)
    }               reduce using rule 17 (METHOD_DECL -> TYPE id ( ) BLOCK .)


state 49

    (18) METHOD_DECL -> TYPE id ( FORMALS ) . BLOCK
    (28) BLOCK -> . { }
    (29) BLOCK -> . { VAR_DECL_STATEMENTS_LIST }

    {               shift and go to state 44

    BLOCK                          shift and go to state 85

state 50

    (16) LIST_AUX_IDS -> , id LIST_AUX_IDS .

    ;               reduce using rule 16 (LIST_AUX_IDS -> , id LIST_AUX_IDS .)


state 51

    (92) LITERAL -> false .

    .               reduce using rule 92 (LITERAL -> false .)
    +               reduce using rule 92 (LITERAL -> false .)
    -               reduce using rule 92 (LITERAL -> false .)
    *               reduce using rule 92 (LITERAL -> false .)
    /               reduce using rule 92 (LITERAL -> false .)
    %               reduce using rule 92 (LITERAL -> false .)
    y               reduce using rule 92 (LITERAL -> false .)
    o               reduce using rule 92 (LITERAL -> false .)
    <               reduce using rule 92 (LITERAL -> false .)
    menorIgual      reduce using rule 92 (LITERAL -> false .)
    >               reduce using rule 92 (LITERAL -> false .)
    mayorIgual      reduce using rule 92 (LITERAL -> false .)
    comparador      reduce using rule 92 (LITERAL -> false .)
    noIgual         reduce using rule 92 (LITERAL -> false .)
    )               reduce using rule 92 (LITERAL -> false .)
    ;               reduce using rule 92 (LITERAL -> false .)
    ]               reduce using rule 92 (LITERAL -> false .)
    ,               reduce using rule 92 (LITERAL -> false .)


state 52

    (87) LITERAL -> binario .

    .               reduce using rule 87 (LITERAL -> binario .)
    +               reduce using rule 87 (LITERAL -> binario .)
    -               reduce using rule 87 (LITERAL -> binario .)
    *               reduce using rule 87 (LITERAL -> binario .)
    /               reduce using rule 87 (LITERAL -> binario .)
    %               reduce using rule 87 (LITERAL -> binario .)
    y               reduce using rule 87 (LITERAL -> binario .)
    o               reduce using rule 87 (LITERAL -> binario .)
    <               reduce using rule 87 (LITERAL -> binario .)
    menorIgual      reduce using rule 87 (LITERAL -> binario .)
    >               reduce using rule 87 (LITERAL -> binario .)
    mayorIgual      reduce using rule 87 (LITERAL -> binario .)
    comparador      reduce using rule 87 (LITERAL -> binario .)
    noIgual         reduce using rule 87 (LITERAL -> binario .)
    )               reduce using rule 87 (LITERAL -> binario .)
    ;               reduce using rule 87 (LITERAL -> binario .)
    ]               reduce using rule 87 (LITERAL -> binario .)
    ,               reduce using rule 87 (LITERAL -> binario .)


state 53

    (89) LITERAL -> cientifico .

    .               reduce using rule 89 (LITERAL -> cientifico .)
    +               reduce using rule 89 (LITERAL -> cientifico .)
    -               reduce using rule 89 (LITERAL -> cientifico .)
    *               reduce using rule 89 (LITERAL -> cientifico .)
    /               reduce using rule 89 (LITERAL -> cientifico .)
    %               reduce using rule 89 (LITERAL -> cientifico .)
    y               reduce using rule 89 (LITERAL -> cientifico .)
    o               reduce using rule 89 (LITERAL -> cientifico .)
    <               reduce using rule 89 (LITERAL -> cientifico .)
    menorIgual      reduce using rule 89 (LITERAL -> cientifico .)
    >               reduce using rule 89 (LITERAL -> cientifico .)
    mayorIgual      reduce using rule 89 (LITERAL -> cientifico .)
    comparador      reduce using rule 89 (LITERAL -> cientifico .)
    noIgual         reduce using rule 89 (LITERAL -> cientifico .)
    )               reduce using rule 89 (LITERAL -> cientifico .)
    ;               reduce using rule 89 (LITERAL -> cientifico .)
    ]               reduce using rule 89 (LITERAL -> cientifico .)
    ,               reduce using rule 89 (LITERAL -> cientifico .)


state 54

    (26) TYPE -> id .
    (53) LOCATION -> id .
    (55) LOCATION -> id . [ EXPRESSION ]
    (58) METHOD -> id .

  ! shift/reduce conflict for [ resolved as shift
    id              reduce using rule 26 (TYPE -> id .)
    =               reduce using rule 53 (LOCATION -> id .)
    .               reduce using rule 53 (LOCATION -> id .)
    +               reduce using rule 53 (LOCATION -> id .)
    -               reduce using rule 53 (LOCATION -> id .)
    *               reduce using rule 53 (LOCATION -> id .)
    /               reduce using rule 53 (LOCATION -> id .)
    %               reduce using rule 53 (LOCATION -> id .)
    y               reduce using rule 53 (LOCATION -> id .)
    o               reduce using rule 53 (LOCATION -> id .)
    <               reduce using rule 53 (LOCATION -> id .)
    menorIgual      reduce using rule 53 (LOCATION -> id .)
    >               reduce using rule 53 (LOCATION -> id .)
    mayorIgual      reduce using rule 53 (LOCATION -> id .)
    comparador      reduce using rule 53 (LOCATION -> id .)
    noIgual         reduce using rule 53 (LOCATION -> id .)
    [               shift and go to state 86
    (               reduce using rule 58 (METHOD -> id .)

  ! [               [ reduce using rule 26 (TYPE -> id .) ]


state 55

    (51) STATEMENT -> BLOCK .

    else            reduce using rule 51 (STATEMENT -> BLOCK .)
    return          reduce using rule 51 (STATEMENT -> BLOCK .)
    if              reduce using rule 51 (STATEMENT -> BLOCK .)
    while           reduce using rule 51 (STATEMENT -> BLOCK .)
    break           reduce using rule 51 (STATEMENT -> BLOCK .)
    continue        reduce using rule 51 (STATEMENT -> BLOCK .)
    int             reduce using rule 51 (STATEMENT -> BLOCK .)
    boolean         reduce using rule 51 (STATEMENT -> BLOCK .)
    string          reduce using rule 51 (STATEMENT -> BLOCK .)
    id              reduce using rule 51 (STATEMENT -> BLOCK .)
    {               reduce using rule 51 (STATEMENT -> BLOCK .)
    this            reduce using rule 51 (STATEMENT -> BLOCK .)
    new             reduce using rule 51 (STATEMENT -> BLOCK .)
    !               reduce using rule 51 (STATEMENT -> BLOCK .)
    -               reduce using rule 51 (STATEMENT -> BLOCK .)
    (               reduce using rule 51 (STATEMENT -> BLOCK .)
    numero          reduce using rule 51 (STATEMENT -> BLOCK .)
    binario         reduce using rule 51 (STATEMENT -> BLOCK .)
    hexa            reduce using rule 51 (STATEMENT -> BLOCK .)
    cientifico      reduce using rule 51 (STATEMENT -> BLOCK .)
    cadenaCaracteres reduce using rule 51 (STATEMENT -> BLOCK .)
    true            reduce using rule 51 (STATEMENT -> BLOCK .)
    false           reduce using rule 51 (STATEMENT -> BLOCK .)
    null            reduce using rule 51 (STATEMENT -> BLOCK .)
    }               reduce using rule 51 (STATEMENT -> BLOCK .)


state 56

    (46) STATEMENT -> if . ( EXPRESSION ) STATEMENT else STATEMENT
    (47) STATEMENT -> if . ( EXPRESSION ) STATEMENT

    (               shift and go to state 87


state 57

    (69) EXPRESSION -> ! . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 90
    METHOD                         shift and go to state 76

state 58

    (91) LITERAL -> true .

    .               reduce using rule 91 (LITERAL -> true .)
    +               reduce using rule 91 (LITERAL -> true .)
    -               reduce using rule 91 (LITERAL -> true .)
    *               reduce using rule 91 (LITERAL -> true .)
    /               reduce using rule 91 (LITERAL -> true .)
    %               reduce using rule 91 (LITERAL -> true .)
    y               reduce using rule 91 (LITERAL -> true .)
    o               reduce using rule 91 (LITERAL -> true .)
    <               reduce using rule 91 (LITERAL -> true .)
    menorIgual      reduce using rule 91 (LITERAL -> true .)
    >               reduce using rule 91 (LITERAL -> true .)
    mayorIgual      reduce using rule 91 (LITERAL -> true .)
    comparador      reduce using rule 91 (LITERAL -> true .)
    noIgual         reduce using rule 91 (LITERAL -> true .)
    )               reduce using rule 91 (LITERAL -> true .)
    ;               reduce using rule 91 (LITERAL -> true .)
    ]               reduce using rule 91 (LITERAL -> true .)
    ,               reduce using rule 91 (LITERAL -> true .)


state 59

    (68) EXPRESSION -> BINARY_EXPRESSION .

    .               reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    +               reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    -               reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    *               reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    /               reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    %               reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    y               reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    o               reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    <               reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    menorIgual      reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    >               reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    mayorIgual      reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    comparador      reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    noIgual         reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    )               reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    ;               reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    ]               reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)
    ,               reduce using rule 68 (EXPRESSION -> BINARY_EXPRESSION .)


state 60

    (72) EXPRESSION -> ( . EXPRESSION )
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 92
    METHOD                         shift and go to state 76

state 61

    (70) EXPRESSION -> - . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 93
    METHOD                         shift and go to state 76

state 62

    (52) ASSIGN -> LOCATION . = EXPRESSION
    (62) EXPRESSION -> LOCATION .

    =               shift and go to state 94
    .               reduce using rule 62 (EXPRESSION -> LOCATION .)
    +               reduce using rule 62 (EXPRESSION -> LOCATION .)
    -               reduce using rule 62 (EXPRESSION -> LOCATION .)
    *               reduce using rule 62 (EXPRESSION -> LOCATION .)
    /               reduce using rule 62 (EXPRESSION -> LOCATION .)
    %               reduce using rule 62 (EXPRESSION -> LOCATION .)
    y               reduce using rule 62 (EXPRESSION -> LOCATION .)
    o               reduce using rule 62 (EXPRESSION -> LOCATION .)
    <               reduce using rule 62 (EXPRESSION -> LOCATION .)
    menorIgual      reduce using rule 62 (EXPRESSION -> LOCATION .)
    >               reduce using rule 62 (EXPRESSION -> LOCATION .)
    mayorIgual      reduce using rule 62 (EXPRESSION -> LOCATION .)
    comparador      reduce using rule 62 (EXPRESSION -> LOCATION .)
    noIgual         reduce using rule 62 (EXPRESSION -> LOCATION .)


state 63

    (65) EXPRESSION -> new . id ( )
    (66) EXPRESSION -> new . TYPE [ EXPRESSION ]
    (23) TYPE -> . int
    (24) TYPE -> . boolean
    (25) TYPE -> . string
    (26) TYPE -> . id
    (27) TYPE -> . TYPE [ ]

    id              shift and go to state 96
    int             shift and go to state 16
    boolean         shift and go to state 17
    string          shift and go to state 11

    TYPE                           shift and go to state 95

state 64

    (42) STATEMENT -> ASSIGN . ;

    ;               shift and go to state 97


state 65

    (44) STATEMENT -> return . EXPRESSION ;
    (45) STATEMENT -> return . ;
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    ;               shift and go to state 98
    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 99
    METHOD                         shift and go to state 76

state 66

    (93) LITERAL -> null .

    .               reduce using rule 93 (LITERAL -> null .)
    +               reduce using rule 93 (LITERAL -> null .)
    -               reduce using rule 93 (LITERAL -> null .)
    *               reduce using rule 93 (LITERAL -> null .)
    /               reduce using rule 93 (LITERAL -> null .)
    %               reduce using rule 93 (LITERAL -> null .)
    y               reduce using rule 93 (LITERAL -> null .)
    o               reduce using rule 93 (LITERAL -> null .)
    <               reduce using rule 93 (LITERAL -> null .)
    menorIgual      reduce using rule 93 (LITERAL -> null .)
    >               reduce using rule 93 (LITERAL -> null .)
    mayorIgual      reduce using rule 93 (LITERAL -> null .)
    comparador      reduce using rule 93 (LITERAL -> null .)
    noIgual         reduce using rule 93 (LITERAL -> null .)
    )               reduce using rule 93 (LITERAL -> null .)
    ;               reduce using rule 93 (LITERAL -> null .)
    ]               reduce using rule 93 (LITERAL -> null .)
    ,               reduce using rule 93 (LITERAL -> null .)


state 67

    (30) VAR_DECL_STATEMENTS_LIST -> VAR_DECL .
    (31) VAR_DECL_STATEMENTS_LIST -> VAR_DECL . VAR_DECL_STATEMENTS_LIST
    (30) VAR_DECL_STATEMENTS_LIST -> . VAR_DECL
    (31) VAR_DECL_STATEMENTS_LIST -> . VAR_DECL VAR_DECL_STATEMENTS_LIST
    (32) VAR_DECL_STATEMENTS_LIST -> . STATEMENT
    (33) VAR_DECL_STATEMENTS_LIST -> . STATEMENT VAR_DECL_STATEMENTS_LIST
    (34) VAR_DECL -> . TYPE id LIST_IDS_EXPRESSIONS ;
    (35) VAR_DECL -> . TYPE id ;
    (36) VAR_DECL -> . TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ;
    (37) VAR_DECL -> . TYPE id = EXPRESSION ;
    (42) STATEMENT -> . ASSIGN ;
    (43) STATEMENT -> . CALL ;
    (44) STATEMENT -> . return EXPRESSION ;
    (45) STATEMENT -> . return ;
    (46) STATEMENT -> . if ( EXPRESSION ) STATEMENT else STATEMENT
    (47) STATEMENT -> . if ( EXPRESSION ) STATEMENT
    (48) STATEMENT -> . while ( EXPRESSION ) STATEMENT
    (49) STATEMENT -> . break ;
    (50) STATEMENT -> . continue ;
    (51) STATEMENT -> . BLOCK
    (23) TYPE -> . int
    (24) TYPE -> . boolean
    (25) TYPE -> . string
    (26) TYPE -> . id
    (27) TYPE -> . TYPE [ ]
    (52) ASSIGN -> . LOCATION = EXPRESSION
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (28) BLOCK -> . { }
    (29) BLOCK -> . { VAR_DECL_STATEMENTS_LIST }
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null

    }               reduce using rule 30 (VAR_DECL_STATEMENTS_LIST -> VAR_DECL .)
    return          shift and go to state 65
    if              shift and go to state 56
    while           shift and go to state 78
    break           shift and go to state 68
    continue        shift and go to state 79
    int             shift and go to state 16
    boolean         shift and go to state 17
    string          shift and go to state 11
    id              shift and go to state 54
    {               shift and go to state 44
    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    EXPRESSION                     shift and go to state 74
    LITERAL                        shift and go to state 69
    VAR_DECL_STATEMENTS_LIST       shift and go to state 100
    METHOD                         shift and go to state 76
    CALL                           shift and go to state 80
    VAR_DECL                       shift and go to state 67
    STATEMENT                      shift and go to state 71
    TYPE                           shift and go to state 81
    ASSIGN                         shift and go to state 64
    BLOCK                          shift and go to state 55
    LOCATION                       shift and go to state 62

state 68

    (49) STATEMENT -> break . ;

    ;               shift and go to state 101


state 69

    (71) EXPRESSION -> LITERAL .

    .               reduce using rule 71 (EXPRESSION -> LITERAL .)
    +               reduce using rule 71 (EXPRESSION -> LITERAL .)
    -               reduce using rule 71 (EXPRESSION -> LITERAL .)
    *               reduce using rule 71 (EXPRESSION -> LITERAL .)
    /               reduce using rule 71 (EXPRESSION -> LITERAL .)
    %               reduce using rule 71 (EXPRESSION -> LITERAL .)
    y               reduce using rule 71 (EXPRESSION -> LITERAL .)
    o               reduce using rule 71 (EXPRESSION -> LITERAL .)
    <               reduce using rule 71 (EXPRESSION -> LITERAL .)
    menorIgual      reduce using rule 71 (EXPRESSION -> LITERAL .)
    >               reduce using rule 71 (EXPRESSION -> LITERAL .)
    mayorIgual      reduce using rule 71 (EXPRESSION -> LITERAL .)
    comparador      reduce using rule 71 (EXPRESSION -> LITERAL .)
    noIgual         reduce using rule 71 (EXPRESSION -> LITERAL .)
    )               reduce using rule 71 (EXPRESSION -> LITERAL .)
    ;               reduce using rule 71 (EXPRESSION -> LITERAL .)
    ]               reduce using rule 71 (EXPRESSION -> LITERAL .)
    ,               reduce using rule 71 (EXPRESSION -> LITERAL .)


state 70

    (86) LITERAL -> numero .

    .               reduce using rule 86 (LITERAL -> numero .)
    +               reduce using rule 86 (LITERAL -> numero .)
    -               reduce using rule 86 (LITERAL -> numero .)
    *               reduce using rule 86 (LITERAL -> numero .)
    /               reduce using rule 86 (LITERAL -> numero .)
    %               reduce using rule 86 (LITERAL -> numero .)
    y               reduce using rule 86 (LITERAL -> numero .)
    o               reduce using rule 86 (LITERAL -> numero .)
    <               reduce using rule 86 (LITERAL -> numero .)
    menorIgual      reduce using rule 86 (LITERAL -> numero .)
    >               reduce using rule 86 (LITERAL -> numero .)
    mayorIgual      reduce using rule 86 (LITERAL -> numero .)
    comparador      reduce using rule 86 (LITERAL -> numero .)
    noIgual         reduce using rule 86 (LITERAL -> numero .)
    )               reduce using rule 86 (LITERAL -> numero .)
    ;               reduce using rule 86 (LITERAL -> numero .)
    ]               reduce using rule 86 (LITERAL -> numero .)
    ,               reduce using rule 86 (LITERAL -> numero .)


state 71

    (32) VAR_DECL_STATEMENTS_LIST -> STATEMENT .
    (33) VAR_DECL_STATEMENTS_LIST -> STATEMENT . VAR_DECL_STATEMENTS_LIST
    (30) VAR_DECL_STATEMENTS_LIST -> . VAR_DECL
    (31) VAR_DECL_STATEMENTS_LIST -> . VAR_DECL VAR_DECL_STATEMENTS_LIST
    (32) VAR_DECL_STATEMENTS_LIST -> . STATEMENT
    (33) VAR_DECL_STATEMENTS_LIST -> . STATEMENT VAR_DECL_STATEMENTS_LIST
    (34) VAR_DECL -> . TYPE id LIST_IDS_EXPRESSIONS ;
    (35) VAR_DECL -> . TYPE id ;
    (36) VAR_DECL -> . TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ;
    (37) VAR_DECL -> . TYPE id = EXPRESSION ;
    (42) STATEMENT -> . ASSIGN ;
    (43) STATEMENT -> . CALL ;
    (44) STATEMENT -> . return EXPRESSION ;
    (45) STATEMENT -> . return ;
    (46) STATEMENT -> . if ( EXPRESSION ) STATEMENT else STATEMENT
    (47) STATEMENT -> . if ( EXPRESSION ) STATEMENT
    (48) STATEMENT -> . while ( EXPRESSION ) STATEMENT
    (49) STATEMENT -> . break ;
    (50) STATEMENT -> . continue ;
    (51) STATEMENT -> . BLOCK
    (23) TYPE -> . int
    (24) TYPE -> . boolean
    (25) TYPE -> . string
    (26) TYPE -> . id
    (27) TYPE -> . TYPE [ ]
    (52) ASSIGN -> . LOCATION = EXPRESSION
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (28) BLOCK -> . { }
    (29) BLOCK -> . { VAR_DECL_STATEMENTS_LIST }
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null

    }               reduce using rule 32 (VAR_DECL_STATEMENTS_LIST -> STATEMENT .)
    return          shift and go to state 65
    if              shift and go to state 56
    while           shift and go to state 78
    break           shift and go to state 68
    continue        shift and go to state 79
    int             shift and go to state 16
    boolean         shift and go to state 17
    string          shift and go to state 11
    id              shift and go to state 54
    {               shift and go to state 44
    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    EXPRESSION                     shift and go to state 74
    LITERAL                        shift and go to state 69
    VAR_DECL                       shift and go to state 67
    METHOD                         shift and go to state 76
    CALL                           shift and go to state 80
    VAR_DECL_STATEMENTS_LIST       shift and go to state 102
    STATEMENT                      shift and go to state 71
    TYPE                           shift and go to state 81
    ASSIGN                         shift and go to state 64
    BLOCK                          shift and go to state 55
    LOCATION                       shift and go to state 62

state 72

    (90) LITERAL -> cadenaCaracteres .

    .               reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    +               reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    -               reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    *               reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    /               reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    %               reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    y               reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    o               reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    <               reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    menorIgual      reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    >               reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    mayorIgual      reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    comparador      reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    noIgual         reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    )               reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    ;               reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    ]               reduce using rule 90 (LITERAL -> cadenaCaracteres .)
    ,               reduce using rule 90 (LITERAL -> cadenaCaracteres .)


state 73

    (64) EXPRESSION -> this .

    .               reduce using rule 64 (EXPRESSION -> this .)
    +               reduce using rule 64 (EXPRESSION -> this .)
    -               reduce using rule 64 (EXPRESSION -> this .)
    *               reduce using rule 64 (EXPRESSION -> this .)
    /               reduce using rule 64 (EXPRESSION -> this .)
    %               reduce using rule 64 (EXPRESSION -> this .)
    y               reduce using rule 64 (EXPRESSION -> this .)
    o               reduce using rule 64 (EXPRESSION -> this .)
    <               reduce using rule 64 (EXPRESSION -> this .)
    menorIgual      reduce using rule 64 (EXPRESSION -> this .)
    >               reduce using rule 64 (EXPRESSION -> this .)
    mayorIgual      reduce using rule 64 (EXPRESSION -> this .)
    comparador      reduce using rule 64 (EXPRESSION -> this .)
    noIgual         reduce using rule 64 (EXPRESSION -> this .)
    )               reduce using rule 64 (EXPRESSION -> this .)
    ;               reduce using rule 64 (EXPRESSION -> this .)
    ]               reduce using rule 64 (EXPRESSION -> this .)
    ,               reduce using rule 64 (EXPRESSION -> this .)


state 74

    (54) LOCATION -> EXPRESSION . . id
    (59) METHOD -> EXPRESSION . . id
    (67) EXPRESSION -> EXPRESSION . . length
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION

    .               shift and go to state 110
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    y               shift and go to state 114
    o               shift and go to state 112
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111
    comparador      shift and go to state 113
    noIgual         shift and go to state 104


state 75

    (29) BLOCK -> { VAR_DECL_STATEMENTS_LIST . }

    }               shift and go to state 117


state 76

    (56) CALL -> METHOD . ( ACTUALS )
    (57) CALL -> METHOD . ( )

    (               shift and go to state 118


state 77

    (88) LITERAL -> hexa .

    .               reduce using rule 88 (LITERAL -> hexa .)
    +               reduce using rule 88 (LITERAL -> hexa .)
    -               reduce using rule 88 (LITERAL -> hexa .)
    *               reduce using rule 88 (LITERAL -> hexa .)
    /               reduce using rule 88 (LITERAL -> hexa .)
    %               reduce using rule 88 (LITERAL -> hexa .)
    y               reduce using rule 88 (LITERAL -> hexa .)
    o               reduce using rule 88 (LITERAL -> hexa .)
    <               reduce using rule 88 (LITERAL -> hexa .)
    menorIgual      reduce using rule 88 (LITERAL -> hexa .)
    >               reduce using rule 88 (LITERAL -> hexa .)
    mayorIgual      reduce using rule 88 (LITERAL -> hexa .)
    comparador      reduce using rule 88 (LITERAL -> hexa .)
    noIgual         reduce using rule 88 (LITERAL -> hexa .)
    )               reduce using rule 88 (LITERAL -> hexa .)
    ;               reduce using rule 88 (LITERAL -> hexa .)
    ]               reduce using rule 88 (LITERAL -> hexa .)
    ,               reduce using rule 88 (LITERAL -> hexa .)


state 78

    (48) STATEMENT -> while . ( EXPRESSION ) STATEMENT

    (               shift and go to state 119


state 79

    (50) STATEMENT -> continue . ;

    ;               shift and go to state 120


state 80

    (43) STATEMENT -> CALL . ;
    (63) EXPRESSION -> CALL .

    ;               shift and go to state 121
    .               reduce using rule 63 (EXPRESSION -> CALL .)
    +               reduce using rule 63 (EXPRESSION -> CALL .)
    -               reduce using rule 63 (EXPRESSION -> CALL .)
    *               reduce using rule 63 (EXPRESSION -> CALL .)
    /               reduce using rule 63 (EXPRESSION -> CALL .)
    %               reduce using rule 63 (EXPRESSION -> CALL .)
    y               reduce using rule 63 (EXPRESSION -> CALL .)
    o               reduce using rule 63 (EXPRESSION -> CALL .)
    <               reduce using rule 63 (EXPRESSION -> CALL .)
    menorIgual      reduce using rule 63 (EXPRESSION -> CALL .)
    >               reduce using rule 63 (EXPRESSION -> CALL .)
    mayorIgual      reduce using rule 63 (EXPRESSION -> CALL .)
    comparador      reduce using rule 63 (EXPRESSION -> CALL .)
    noIgual         reduce using rule 63 (EXPRESSION -> CALL .)


state 81

    (34) VAR_DECL -> TYPE . id LIST_IDS_EXPRESSIONS ;
    (35) VAR_DECL -> TYPE . id ;
    (36) VAR_DECL -> TYPE . id = EXPRESSION LIST_IDS_EXPRESSIONS ;
    (37) VAR_DECL -> TYPE . id = EXPRESSION ;
    (27) TYPE -> TYPE . [ ]

    id              shift and go to state 122
    [               shift and go to state 26


state 82

    (28) BLOCK -> { } .

    return          reduce using rule 28 (BLOCK -> { } .)
    if              reduce using rule 28 (BLOCK -> { } .)
    while           reduce using rule 28 (BLOCK -> { } .)
    break           reduce using rule 28 (BLOCK -> { } .)
    continue        reduce using rule 28 (BLOCK -> { } .)
    int             reduce using rule 28 (BLOCK -> { } .)
    boolean         reduce using rule 28 (BLOCK -> { } .)
    string          reduce using rule 28 (BLOCK -> { } .)
    id              reduce using rule 28 (BLOCK -> { } .)
    {               reduce using rule 28 (BLOCK -> { } .)
    this            reduce using rule 28 (BLOCK -> { } .)
    new             reduce using rule 28 (BLOCK -> { } .)
    !               reduce using rule 28 (BLOCK -> { } .)
    -               reduce using rule 28 (BLOCK -> { } .)
    (               reduce using rule 28 (BLOCK -> { } .)
    numero          reduce using rule 28 (BLOCK -> { } .)
    binario         reduce using rule 28 (BLOCK -> { } .)
    hexa            reduce using rule 28 (BLOCK -> { } .)
    cientifico      reduce using rule 28 (BLOCK -> { } .)
    cadenaCaracteres reduce using rule 28 (BLOCK -> { } .)
    true            reduce using rule 28 (BLOCK -> { } .)
    false           reduce using rule 28 (BLOCK -> { } .)
    null            reduce using rule 28 (BLOCK -> { } .)
    }               reduce using rule 28 (BLOCK -> { } .)
    void            reduce using rule 28 (BLOCK -> { } .)
    else            reduce using rule 28 (BLOCK -> { } .)


state 83

    (22) FORMALS -> TYPE id , . FORMALS
    (21) FORMALS -> . TYPE id
    (22) FORMALS -> . TYPE id , FORMALS
    (23) TYPE -> . int
    (24) TYPE -> . boolean
    (25) TYPE -> . string
    (26) TYPE -> . id
    (27) TYPE -> . TYPE [ ]

    int             shift and go to state 16
    boolean         shift and go to state 17
    string          shift and go to state 11
    id              shift and go to state 18

    TYPE                           shift and go to state 38
    FORMALS                        shift and go to state 123

state 84

    (20) METHOD_DECL -> void id ( FORMALS ) BLOCK .

    void            reduce using rule 20 (METHOD_DECL -> void id ( FORMALS ) BLOCK .)
    int             reduce using rule 20 (METHOD_DECL -> void id ( FORMALS ) BLOCK .)
    boolean         reduce using rule 20 (METHOD_DECL -> void id ( FORMALS ) BLOCK .)
    string          reduce using rule 20 (METHOD_DECL -> void id ( FORMALS ) BLOCK .)
    id              reduce using rule 20 (METHOD_DECL -> void id ( FORMALS ) BLOCK .)
    }               reduce using rule 20 (METHOD_DECL -> void id ( FORMALS ) BLOCK .)


state 85

    (18) METHOD_DECL -> TYPE id ( FORMALS ) BLOCK .

    void            reduce using rule 18 (METHOD_DECL -> TYPE id ( FORMALS ) BLOCK .)
    int             reduce using rule 18 (METHOD_DECL -> TYPE id ( FORMALS ) BLOCK .)
    boolean         reduce using rule 18 (METHOD_DECL -> TYPE id ( FORMALS ) BLOCK .)
    string          reduce using rule 18 (METHOD_DECL -> TYPE id ( FORMALS ) BLOCK .)
    id              reduce using rule 18 (METHOD_DECL -> TYPE id ( FORMALS ) BLOCK .)
    }               reduce using rule 18 (METHOD_DECL -> TYPE id ( FORMALS ) BLOCK .)


state 86

    (55) LOCATION -> id [ . EXPRESSION ]
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 124
    METHOD                         shift and go to state 76

state 87

    (46) STATEMENT -> if ( . EXPRESSION ) STATEMENT else STATEMENT
    (47) STATEMENT -> if ( . EXPRESSION ) STATEMENT
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 125
    METHOD                         shift and go to state 76

state 88

    (53) LOCATION -> id .
    (55) LOCATION -> id . [ EXPRESSION ]
    (58) METHOD -> id .

    .               reduce using rule 53 (LOCATION -> id .)
    +               reduce using rule 53 (LOCATION -> id .)
    -               reduce using rule 53 (LOCATION -> id .)
    *               reduce using rule 53 (LOCATION -> id .)
    /               reduce using rule 53 (LOCATION -> id .)
    %               reduce using rule 53 (LOCATION -> id .)
    y               reduce using rule 53 (LOCATION -> id .)
    o               reduce using rule 53 (LOCATION -> id .)
    <               reduce using rule 53 (LOCATION -> id .)
    menorIgual      reduce using rule 53 (LOCATION -> id .)
    >               reduce using rule 53 (LOCATION -> id .)
    mayorIgual      reduce using rule 53 (LOCATION -> id .)
    comparador      reduce using rule 53 (LOCATION -> id .)
    noIgual         reduce using rule 53 (LOCATION -> id .)
    )               reduce using rule 53 (LOCATION -> id .)
    ;               reduce using rule 53 (LOCATION -> id .)
    ]               reduce using rule 53 (LOCATION -> id .)
    ,               reduce using rule 53 (LOCATION -> id .)
    =               reduce using rule 53 (LOCATION -> id .)
    [               shift and go to state 86
    (               reduce using rule 58 (METHOD -> id .)


state 89

    (62) EXPRESSION -> LOCATION .

    .               reduce using rule 62 (EXPRESSION -> LOCATION .)
    +               reduce using rule 62 (EXPRESSION -> LOCATION .)
    -               reduce using rule 62 (EXPRESSION -> LOCATION .)
    *               reduce using rule 62 (EXPRESSION -> LOCATION .)
    /               reduce using rule 62 (EXPRESSION -> LOCATION .)
    %               reduce using rule 62 (EXPRESSION -> LOCATION .)
    y               reduce using rule 62 (EXPRESSION -> LOCATION .)
    o               reduce using rule 62 (EXPRESSION -> LOCATION .)
    <               reduce using rule 62 (EXPRESSION -> LOCATION .)
    menorIgual      reduce using rule 62 (EXPRESSION -> LOCATION .)
    >               reduce using rule 62 (EXPRESSION -> LOCATION .)
    mayorIgual      reduce using rule 62 (EXPRESSION -> LOCATION .)
    comparador      reduce using rule 62 (EXPRESSION -> LOCATION .)
    noIgual         reduce using rule 62 (EXPRESSION -> LOCATION .)
    )               reduce using rule 62 (EXPRESSION -> LOCATION .)
    ;               reduce using rule 62 (EXPRESSION -> LOCATION .)
    ]               reduce using rule 62 (EXPRESSION -> LOCATION .)
    ,               reduce using rule 62 (EXPRESSION -> LOCATION .)


state 90

    (69) EXPRESSION -> ! EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    .               reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    +               reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    -               reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    *               reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    /               reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    %               reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    y               reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    o               reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    <               reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    menorIgual      reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    >               reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    mayorIgual      reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    comparador      reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    noIgual         reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    )               reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    ;               reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    ]               reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)
    ,               reduce using rule 69 (EXPRESSION -> ! EXPRESSION .)

  ! .               [ shift and go to state 126 ]
  ! +               [ shift and go to state 106 ]
  ! -               [ shift and go to state 108 ]
  ! *               [ shift and go to state 107 ]
  ! /               [ shift and go to state 109 ]
  ! %               [ shift and go to state 103 ]
  ! y               [ shift and go to state 114 ]
  ! o               [ shift and go to state 112 ]
  ! <               [ shift and go to state 105 ]
  ! menorIgual      [ shift and go to state 115 ]
  ! >               [ shift and go to state 116 ]
  ! mayorIgual      [ shift and go to state 111 ]
  ! comparador      [ shift and go to state 113 ]
  ! noIgual         [ shift and go to state 104 ]


state 91

    (63) EXPRESSION -> CALL .

    .               reduce using rule 63 (EXPRESSION -> CALL .)
    +               reduce using rule 63 (EXPRESSION -> CALL .)
    -               reduce using rule 63 (EXPRESSION -> CALL .)
    *               reduce using rule 63 (EXPRESSION -> CALL .)
    /               reduce using rule 63 (EXPRESSION -> CALL .)
    %               reduce using rule 63 (EXPRESSION -> CALL .)
    y               reduce using rule 63 (EXPRESSION -> CALL .)
    o               reduce using rule 63 (EXPRESSION -> CALL .)
    <               reduce using rule 63 (EXPRESSION -> CALL .)
    menorIgual      reduce using rule 63 (EXPRESSION -> CALL .)
    >               reduce using rule 63 (EXPRESSION -> CALL .)
    mayorIgual      reduce using rule 63 (EXPRESSION -> CALL .)
    comparador      reduce using rule 63 (EXPRESSION -> CALL .)
    noIgual         reduce using rule 63 (EXPRESSION -> CALL .)
    )               reduce using rule 63 (EXPRESSION -> CALL .)
    ;               reduce using rule 63 (EXPRESSION -> CALL .)
    ]               reduce using rule 63 (EXPRESSION -> CALL .)
    ,               reduce using rule 63 (EXPRESSION -> CALL .)


state 92

    (72) EXPRESSION -> ( EXPRESSION . )
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    )               shift and go to state 127
    .               shift and go to state 126
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    y               shift and go to state 114
    o               shift and go to state 112
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111
    comparador      shift and go to state 113
    noIgual         shift and go to state 104


state 93

    (70) EXPRESSION -> - EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    .               reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    +               reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    -               reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    *               reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    /               reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    %               reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    y               reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    o               reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    <               reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    menorIgual      reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    >               reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    mayorIgual      reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    comparador      reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    noIgual         reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    )               reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    ;               reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    ]               reduce using rule 70 (EXPRESSION -> - EXPRESSION .)
    ,               reduce using rule 70 (EXPRESSION -> - EXPRESSION .)

  ! .               [ shift and go to state 126 ]
  ! +               [ shift and go to state 106 ]
  ! -               [ shift and go to state 108 ]
  ! *               [ shift and go to state 107 ]
  ! /               [ shift and go to state 109 ]
  ! %               [ shift and go to state 103 ]
  ! y               [ shift and go to state 114 ]
  ! o               [ shift and go to state 112 ]
  ! <               [ shift and go to state 105 ]
  ! menorIgual      [ shift and go to state 115 ]
  ! >               [ shift and go to state 116 ]
  ! mayorIgual      [ shift and go to state 111 ]
  ! comparador      [ shift and go to state 113 ]
  ! noIgual         [ shift and go to state 104 ]


state 94

    (52) ASSIGN -> LOCATION = . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 128
    METHOD                         shift and go to state 76

state 95

    (66) EXPRESSION -> new TYPE . [ EXPRESSION ]
    (27) TYPE -> TYPE . [ ]

    [               shift and go to state 129


state 96

    (65) EXPRESSION -> new id . ( )
    (26) TYPE -> id .

    (               shift and go to state 130
    [               reduce using rule 26 (TYPE -> id .)


state 97

    (42) STATEMENT -> ASSIGN ; .

    else            reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    return          reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    if              reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    while           reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    break           reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    continue        reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    int             reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    boolean         reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    string          reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    id              reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    {               reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    this            reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    new             reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    !               reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    -               reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    (               reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    numero          reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    binario         reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    hexa            reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    cientifico      reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    cadenaCaracteres reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    true            reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    false           reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    null            reduce using rule 42 (STATEMENT -> ASSIGN ; .)
    }               reduce using rule 42 (STATEMENT -> ASSIGN ; .)


state 98

    (45) STATEMENT -> return ; .

    else            reduce using rule 45 (STATEMENT -> return ; .)
    return          reduce using rule 45 (STATEMENT -> return ; .)
    if              reduce using rule 45 (STATEMENT -> return ; .)
    while           reduce using rule 45 (STATEMENT -> return ; .)
    break           reduce using rule 45 (STATEMENT -> return ; .)
    continue        reduce using rule 45 (STATEMENT -> return ; .)
    int             reduce using rule 45 (STATEMENT -> return ; .)
    boolean         reduce using rule 45 (STATEMENT -> return ; .)
    string          reduce using rule 45 (STATEMENT -> return ; .)
    id              reduce using rule 45 (STATEMENT -> return ; .)
    {               reduce using rule 45 (STATEMENT -> return ; .)
    this            reduce using rule 45 (STATEMENT -> return ; .)
    new             reduce using rule 45 (STATEMENT -> return ; .)
    !               reduce using rule 45 (STATEMENT -> return ; .)
    -               reduce using rule 45 (STATEMENT -> return ; .)
    (               reduce using rule 45 (STATEMENT -> return ; .)
    numero          reduce using rule 45 (STATEMENT -> return ; .)
    binario         reduce using rule 45 (STATEMENT -> return ; .)
    hexa            reduce using rule 45 (STATEMENT -> return ; .)
    cientifico      reduce using rule 45 (STATEMENT -> return ; .)
    cadenaCaracteres reduce using rule 45 (STATEMENT -> return ; .)
    true            reduce using rule 45 (STATEMENT -> return ; .)
    false           reduce using rule 45 (STATEMENT -> return ; .)
    null            reduce using rule 45 (STATEMENT -> return ; .)
    }               reduce using rule 45 (STATEMENT -> return ; .)


state 99

    (44) STATEMENT -> return EXPRESSION . ;
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ;               shift and go to state 131
    .               shift and go to state 126
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    y               shift and go to state 114
    o               shift and go to state 112
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111
    comparador      shift and go to state 113
    noIgual         shift and go to state 104


state 100

    (31) VAR_DECL_STATEMENTS_LIST -> VAR_DECL VAR_DECL_STATEMENTS_LIST .

    }               reduce using rule 31 (VAR_DECL_STATEMENTS_LIST -> VAR_DECL VAR_DECL_STATEMENTS_LIST .)


state 101

    (49) STATEMENT -> break ; .

    else            reduce using rule 49 (STATEMENT -> break ; .)
    return          reduce using rule 49 (STATEMENT -> break ; .)
    if              reduce using rule 49 (STATEMENT -> break ; .)
    while           reduce using rule 49 (STATEMENT -> break ; .)
    break           reduce using rule 49 (STATEMENT -> break ; .)
    continue        reduce using rule 49 (STATEMENT -> break ; .)
    int             reduce using rule 49 (STATEMENT -> break ; .)
    boolean         reduce using rule 49 (STATEMENT -> break ; .)
    string          reduce using rule 49 (STATEMENT -> break ; .)
    id              reduce using rule 49 (STATEMENT -> break ; .)
    {               reduce using rule 49 (STATEMENT -> break ; .)
    this            reduce using rule 49 (STATEMENT -> break ; .)
    new             reduce using rule 49 (STATEMENT -> break ; .)
    !               reduce using rule 49 (STATEMENT -> break ; .)
    -               reduce using rule 49 (STATEMENT -> break ; .)
    (               reduce using rule 49 (STATEMENT -> break ; .)
    numero          reduce using rule 49 (STATEMENT -> break ; .)
    binario         reduce using rule 49 (STATEMENT -> break ; .)
    hexa            reduce using rule 49 (STATEMENT -> break ; .)
    cientifico      reduce using rule 49 (STATEMENT -> break ; .)
    cadenaCaracteres reduce using rule 49 (STATEMENT -> break ; .)
    true            reduce using rule 49 (STATEMENT -> break ; .)
    false           reduce using rule 49 (STATEMENT -> break ; .)
    null            reduce using rule 49 (STATEMENT -> break ; .)
    }               reduce using rule 49 (STATEMENT -> break ; .)


state 102

    (33) VAR_DECL_STATEMENTS_LIST -> STATEMENT VAR_DECL_STATEMENTS_LIST .

    }               reduce using rule 33 (VAR_DECL_STATEMENTS_LIST -> STATEMENT VAR_DECL_STATEMENTS_LIST .)


state 103

    (77) BINARY_EXPRESSION -> EXPRESSION % . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 132
    METHOD                         shift and go to state 76

state 104

    (85) BINARY_EXPRESSION -> EXPRESSION noIgual . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 133
    METHOD                         shift and go to state 76

state 105

    (80) BINARY_EXPRESSION -> EXPRESSION < . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 134
    METHOD                         shift and go to state 76

state 106

    (73) BINARY_EXPRESSION -> EXPRESSION + . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 135
    METHOD                         shift and go to state 76

state 107

    (75) BINARY_EXPRESSION -> EXPRESSION * . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 136
    METHOD                         shift and go to state 76

state 108

    (74) BINARY_EXPRESSION -> EXPRESSION - . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 137
    METHOD                         shift and go to state 76

state 109

    (76) BINARY_EXPRESSION -> EXPRESSION / . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 138
    METHOD                         shift and go to state 76

state 110

    (54) LOCATION -> EXPRESSION . . id
    (59) METHOD -> EXPRESSION . . id
    (67) EXPRESSION -> EXPRESSION . . length

    id              shift and go to state 140
    length          shift and go to state 139


state 111

    (83) BINARY_EXPRESSION -> EXPRESSION mayorIgual . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 141
    METHOD                         shift and go to state 76

state 112

    (79) BINARY_EXPRESSION -> EXPRESSION o . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 142
    METHOD                         shift and go to state 76

state 113

    (84) BINARY_EXPRESSION -> EXPRESSION comparador . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 143
    METHOD                         shift and go to state 76

state 114

    (78) BINARY_EXPRESSION -> EXPRESSION y . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 144
    METHOD                         shift and go to state 76

state 115

    (81) BINARY_EXPRESSION -> EXPRESSION menorIgual . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 145
    METHOD                         shift and go to state 76

state 116

    (82) BINARY_EXPRESSION -> EXPRESSION > . EXPRESSION
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 146
    METHOD                         shift and go to state 76

state 117

    (29) BLOCK -> { VAR_DECL_STATEMENTS_LIST } .

    return          reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    if              reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    while           reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    break           reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    continue        reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    int             reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    boolean         reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    string          reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    id              reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    {               reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    this            reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    new             reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    !               reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    -               reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    (               reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    numero          reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    binario         reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    hexa            reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    cientifico      reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    cadenaCaracteres reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    true            reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    false           reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    null            reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    }               reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    void            reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)
    else            reduce using rule 29 (BLOCK -> { VAR_DECL_STATEMENTS_LIST } .)


state 118

    (56) CALL -> METHOD ( . ACTUALS )
    (57) CALL -> METHOD ( . )
    (60) ACTUALS -> . EXPRESSION
    (61) ACTUALS -> . EXPRESSION , ACTUALS
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    )               shift and go to state 147
    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    ACTUALS                        shift and go to state 149
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 148
    METHOD                         shift and go to state 76

state 119

    (48) STATEMENT -> while ( . EXPRESSION ) STATEMENT
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 150
    METHOD                         shift and go to state 76

state 120

    (50) STATEMENT -> continue ; .

    else            reduce using rule 50 (STATEMENT -> continue ; .)
    return          reduce using rule 50 (STATEMENT -> continue ; .)
    if              reduce using rule 50 (STATEMENT -> continue ; .)
    while           reduce using rule 50 (STATEMENT -> continue ; .)
    break           reduce using rule 50 (STATEMENT -> continue ; .)
    continue        reduce using rule 50 (STATEMENT -> continue ; .)
    int             reduce using rule 50 (STATEMENT -> continue ; .)
    boolean         reduce using rule 50 (STATEMENT -> continue ; .)
    string          reduce using rule 50 (STATEMENT -> continue ; .)
    id              reduce using rule 50 (STATEMENT -> continue ; .)
    {               reduce using rule 50 (STATEMENT -> continue ; .)
    this            reduce using rule 50 (STATEMENT -> continue ; .)
    new             reduce using rule 50 (STATEMENT -> continue ; .)
    !               reduce using rule 50 (STATEMENT -> continue ; .)
    -               reduce using rule 50 (STATEMENT -> continue ; .)
    (               reduce using rule 50 (STATEMENT -> continue ; .)
    numero          reduce using rule 50 (STATEMENT -> continue ; .)
    binario         reduce using rule 50 (STATEMENT -> continue ; .)
    hexa            reduce using rule 50 (STATEMENT -> continue ; .)
    cientifico      reduce using rule 50 (STATEMENT -> continue ; .)
    cadenaCaracteres reduce using rule 50 (STATEMENT -> continue ; .)
    true            reduce using rule 50 (STATEMENT -> continue ; .)
    false           reduce using rule 50 (STATEMENT -> continue ; .)
    null            reduce using rule 50 (STATEMENT -> continue ; .)
    }               reduce using rule 50 (STATEMENT -> continue ; .)


state 121

    (43) STATEMENT -> CALL ; .

    else            reduce using rule 43 (STATEMENT -> CALL ; .)
    return          reduce using rule 43 (STATEMENT -> CALL ; .)
    if              reduce using rule 43 (STATEMENT -> CALL ; .)
    while           reduce using rule 43 (STATEMENT -> CALL ; .)
    break           reduce using rule 43 (STATEMENT -> CALL ; .)
    continue        reduce using rule 43 (STATEMENT -> CALL ; .)
    int             reduce using rule 43 (STATEMENT -> CALL ; .)
    boolean         reduce using rule 43 (STATEMENT -> CALL ; .)
    string          reduce using rule 43 (STATEMENT -> CALL ; .)
    id              reduce using rule 43 (STATEMENT -> CALL ; .)
    {               reduce using rule 43 (STATEMENT -> CALL ; .)
    this            reduce using rule 43 (STATEMENT -> CALL ; .)
    new             reduce using rule 43 (STATEMENT -> CALL ; .)
    !               reduce using rule 43 (STATEMENT -> CALL ; .)
    -               reduce using rule 43 (STATEMENT -> CALL ; .)
    (               reduce using rule 43 (STATEMENT -> CALL ; .)
    numero          reduce using rule 43 (STATEMENT -> CALL ; .)
    binario         reduce using rule 43 (STATEMENT -> CALL ; .)
    hexa            reduce using rule 43 (STATEMENT -> CALL ; .)
    cientifico      reduce using rule 43 (STATEMENT -> CALL ; .)
    cadenaCaracteres reduce using rule 43 (STATEMENT -> CALL ; .)
    true            reduce using rule 43 (STATEMENT -> CALL ; .)
    false           reduce using rule 43 (STATEMENT -> CALL ; .)
    null            reduce using rule 43 (STATEMENT -> CALL ; .)
    }               reduce using rule 43 (STATEMENT -> CALL ; .)


state 122

    (34) VAR_DECL -> TYPE id . LIST_IDS_EXPRESSIONS ;
    (35) VAR_DECL -> TYPE id . ;
    (36) VAR_DECL -> TYPE id . = EXPRESSION LIST_IDS_EXPRESSIONS ;
    (37) VAR_DECL -> TYPE id . = EXPRESSION ;
    (38) LIST_IDS_EXPRESSIONS -> . , id
    (39) LIST_IDS_EXPRESSIONS -> . , id = EXPRESSION
    (40) LIST_IDS_EXPRESSIONS -> . , id LIST_IDS_EXPRESSIONS
    (41) LIST_IDS_EXPRESSIONS -> . , id = EXPRESSION LIST_IDS_EXPRESSIONS

    ;               shift and go to state 153
    =               shift and go to state 154
    ,               shift and go to state 151

    LIST_IDS_EXPRESSIONS           shift and go to state 152

state 123

    (22) FORMALS -> TYPE id , FORMALS .

    )               reduce using rule 22 (FORMALS -> TYPE id , FORMALS .)


state 124

    (55) LOCATION -> id [ EXPRESSION . ]
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ]               shift and go to state 155
    .               shift and go to state 126
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    y               shift and go to state 114
    o               shift and go to state 112
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111
    comparador      shift and go to state 113
    noIgual         shift and go to state 104


state 125

    (46) STATEMENT -> if ( EXPRESSION . ) STATEMENT else STATEMENT
    (47) STATEMENT -> if ( EXPRESSION . ) STATEMENT
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    )               shift and go to state 156
    .               shift and go to state 126
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    y               shift and go to state 114
    o               shift and go to state 112
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111
    comparador      shift and go to state 113
    noIgual         shift and go to state 104


state 126

    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (59) METHOD -> EXPRESSION . . id

    length          shift and go to state 139
    id              shift and go to state 140


state 127

    (72) EXPRESSION -> ( EXPRESSION ) .

    .               reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    +               reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    -               reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    *               reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    /               reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    %               reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    y               reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    o               reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    <               reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    menorIgual      reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    >               reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    mayorIgual      reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    comparador      reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    noIgual         reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    )               reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    ;               reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    ]               reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)
    ,               reduce using rule 72 (EXPRESSION -> ( EXPRESSION ) .)


state 128

    (52) ASSIGN -> LOCATION = EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ;               reduce using rule 52 (ASSIGN -> LOCATION = EXPRESSION .)
    .               shift and go to state 126
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    y               shift and go to state 114
    o               shift and go to state 112
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111
    comparador      shift and go to state 113
    noIgual         shift and go to state 104


state 129

    (66) EXPRESSION -> new TYPE [ . EXPRESSION ]
    (27) TYPE -> TYPE [ . ]
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    ]               shift and go to state 31
    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 157
    METHOD                         shift and go to state 76

state 130

    (65) EXPRESSION -> new id ( . )

    )               shift and go to state 158


state 131

    (44) STATEMENT -> return EXPRESSION ; .

    else            reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    return          reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    if              reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    while           reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    break           reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    continue        reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    int             reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    boolean         reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    string          reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    id              reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    {               reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    this            reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    new             reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    !               reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    -               reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    (               reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    numero          reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    binario         reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    hexa            reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    cientifico      reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    cadenaCaracteres reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    true            reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    false           reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    null            reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)
    }               reduce using rule 44 (STATEMENT -> return EXPRESSION ; .)


state 132

    (77) BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ,               reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    .               reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    +               reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    -               reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    *               reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    /               reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    %               reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    y               reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    o               reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    <               reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    menorIgual      reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    >               reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    mayorIgual      reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    comparador      reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    noIgual         reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    )               reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    ;               reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)
    ]               reduce using rule 77 (BINARY_EXPRESSION -> EXPRESSION % EXPRESSION .)

  ! .               [ shift and go to state 126 ]
  ! +               [ shift and go to state 106 ]
  ! -               [ shift and go to state 108 ]
  ! *               [ shift and go to state 107 ]
  ! /               [ shift and go to state 109 ]
  ! %               [ shift and go to state 103 ]
  ! y               [ shift and go to state 114 ]
  ! o               [ shift and go to state 112 ]
  ! <               [ shift and go to state 105 ]
  ! menorIgual      [ shift and go to state 115 ]
  ! >               [ shift and go to state 116 ]
  ! mayorIgual      [ shift and go to state 111 ]
  ! comparador      [ shift and go to state 113 ]
  ! noIgual         [ shift and go to state 104 ]


state 133

    (85) BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ,               reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .)
    .               reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .)
    y               reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .)
    o               reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .)
    comparador      reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .)
    noIgual         reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .)
    )               reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .)
    ;               reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .)
    ]               reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .)
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111

  ! +               [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .) ]
  ! -               [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .) ]
  ! *               [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .) ]
  ! /               [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .) ]
  ! %               [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .) ]
  ! <               [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .) ]
  ! menorIgual      [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .) ]
  ! >               [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .) ]
  ! mayorIgual      [ reduce using rule 85 (BINARY_EXPRESSION -> EXPRESSION noIgual EXPRESSION .) ]
  ! .               [ shift and go to state 126 ]
  ! y               [ shift and go to state 114 ]
  ! o               [ shift and go to state 112 ]
  ! comparador      [ shift and go to state 113 ]
  ! noIgual         [ shift and go to state 104 ]


state 134

    (80) BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ,               reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .)
    .               reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .)
    y               reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .)
    o               reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .)
    <               reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .)
    menorIgual      reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .)
    >               reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .)
    mayorIgual      reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .)
    comparador      reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .)
    noIgual         reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .)
    )               reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .)
    ;               reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .)
    ]               reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .)
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103

  ! +               [ reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .) ]
  ! -               [ reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .) ]
  ! *               [ reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .) ]
  ! /               [ reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .) ]
  ! %               [ reduce using rule 80 (BINARY_EXPRESSION -> EXPRESSION < EXPRESSION .) ]
  ! .               [ shift and go to state 126 ]
  ! y               [ shift and go to state 114 ]
  ! o               [ shift and go to state 112 ]
  ! <               [ shift and go to state 105 ]
  ! menorIgual      [ shift and go to state 115 ]
  ! >               [ shift and go to state 116 ]
  ! mayorIgual      [ shift and go to state 111 ]
  ! comparador      [ shift and go to state 113 ]
  ! noIgual         [ shift and go to state 104 ]


state 135

    (73) BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ,               reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    .               reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    +               reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    -               reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    y               reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    o               reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    <               reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    menorIgual      reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    >               reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    mayorIgual      reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    comparador      reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    noIgual         reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    )               reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    ;               reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    ]               reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .)
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103

  ! *               [ reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .) ]
  ! /               [ reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .) ]
  ! %               [ reduce using rule 73 (BINARY_EXPRESSION -> EXPRESSION + EXPRESSION .) ]
  ! .               [ shift and go to state 126 ]
  ! +               [ shift and go to state 106 ]
  ! -               [ shift and go to state 108 ]
  ! y               [ shift and go to state 114 ]
  ! o               [ shift and go to state 112 ]
  ! <               [ shift and go to state 105 ]
  ! menorIgual      [ shift and go to state 115 ]
  ! >               [ shift and go to state 116 ]
  ! mayorIgual      [ shift and go to state 111 ]
  ! comparador      [ shift and go to state 113 ]
  ! noIgual         [ shift and go to state 104 ]


state 136

    (75) BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ,               reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    .               reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    +               reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    -               reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    *               reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    /               reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    %               reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    y               reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    o               reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    <               reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    menorIgual      reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    >               reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    mayorIgual      reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    comparador      reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    noIgual         reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    )               reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    ;               reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)
    ]               reduce using rule 75 (BINARY_EXPRESSION -> EXPRESSION * EXPRESSION .)

  ! .               [ shift and go to state 126 ]
  ! +               [ shift and go to state 106 ]
  ! -               [ shift and go to state 108 ]
  ! *               [ shift and go to state 107 ]
  ! /               [ shift and go to state 109 ]
  ! %               [ shift and go to state 103 ]
  ! y               [ shift and go to state 114 ]
  ! o               [ shift and go to state 112 ]
  ! <               [ shift and go to state 105 ]
  ! menorIgual      [ shift and go to state 115 ]
  ! >               [ shift and go to state 116 ]
  ! mayorIgual      [ shift and go to state 111 ]
  ! comparador      [ shift and go to state 113 ]
  ! noIgual         [ shift and go to state 104 ]


state 137

    (74) BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ,               reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    .               reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    +               reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    -               reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    y               reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    o               reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    <               reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    menorIgual      reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    >               reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    mayorIgual      reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    comparador      reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    noIgual         reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    )               reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    ;               reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    ]               reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .)
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103

  ! *               [ reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .) ]
  ! /               [ reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .) ]
  ! %               [ reduce using rule 74 (BINARY_EXPRESSION -> EXPRESSION - EXPRESSION .) ]
  ! .               [ shift and go to state 126 ]
  ! +               [ shift and go to state 106 ]
  ! -               [ shift and go to state 108 ]
  ! y               [ shift and go to state 114 ]
  ! o               [ shift and go to state 112 ]
  ! <               [ shift and go to state 105 ]
  ! menorIgual      [ shift and go to state 115 ]
  ! >               [ shift and go to state 116 ]
  ! mayorIgual      [ shift and go to state 111 ]
  ! comparador      [ shift and go to state 113 ]
  ! noIgual         [ shift and go to state 104 ]


state 138

    (76) BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ,               reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    .               reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    +               reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    -               reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    *               reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    /               reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    %               reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    y               reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    o               reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    <               reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    menorIgual      reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    >               reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    mayorIgual      reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    comparador      reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    noIgual         reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    )               reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    ;               reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)
    ]               reduce using rule 76 (BINARY_EXPRESSION -> EXPRESSION / EXPRESSION .)

  ! .               [ shift and go to state 126 ]
  ! +               [ shift and go to state 106 ]
  ! -               [ shift and go to state 108 ]
  ! *               [ shift and go to state 107 ]
  ! /               [ shift and go to state 109 ]
  ! %               [ shift and go to state 103 ]
  ! y               [ shift and go to state 114 ]
  ! o               [ shift and go to state 112 ]
  ! <               [ shift and go to state 105 ]
  ! menorIgual      [ shift and go to state 115 ]
  ! >               [ shift and go to state 116 ]
  ! mayorIgual      [ shift and go to state 111 ]
  ! comparador      [ shift and go to state 113 ]
  ! noIgual         [ shift and go to state 104 ]


state 139

    (67) EXPRESSION -> EXPRESSION . length .

    .               reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    +               reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    -               reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    *               reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    /               reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    %               reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    y               reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    o               reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    <               reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    menorIgual      reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    >               reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    mayorIgual      reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    comparador      reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    noIgual         reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    )               reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    ;               reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    ]               reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)
    ,               reduce using rule 67 (EXPRESSION -> EXPRESSION . length .)


state 140

    (54) LOCATION -> EXPRESSION . id .
    (59) METHOD -> EXPRESSION . id .

    .               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    +               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    -               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    *               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    /               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    %               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    y               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    o               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    <               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    menorIgual      reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    >               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    mayorIgual      reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    comparador      reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    noIgual         reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    )               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    ;               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    ]               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    ,               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    =               reduce using rule 54 (LOCATION -> EXPRESSION . id .)
    (               reduce using rule 59 (METHOD -> EXPRESSION . id .)


state 141

    (83) BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ,               reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .)
    .               reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .)
    y               reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .)
    o               reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .)
    <               reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .)
    menorIgual      reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .)
    >               reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .)
    mayorIgual      reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .)
    comparador      reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .)
    noIgual         reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .)
    )               reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .)
    ;               reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .)
    ]               reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .)
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103

  ! +               [ reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .) ]
  ! -               [ reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .) ]
  ! *               [ reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .) ]
  ! /               [ reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .) ]
  ! %               [ reduce using rule 83 (BINARY_EXPRESSION -> EXPRESSION mayorIgual EXPRESSION .) ]
  ! .               [ shift and go to state 126 ]
  ! y               [ shift and go to state 114 ]
  ! o               [ shift and go to state 112 ]
  ! <               [ shift and go to state 105 ]
  ! menorIgual      [ shift and go to state 115 ]
  ! >               [ shift and go to state 116 ]
  ! mayorIgual      [ shift and go to state 111 ]
  ! comparador      [ shift and go to state 113 ]
  ! noIgual         [ shift and go to state 104 ]


state 142

    (79) BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ,               reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .)
    .               reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .)
    o               reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .)
    )               reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .)
    ;               reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .)
    ]               reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .)
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    y               shift and go to state 114
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111
    comparador      shift and go to state 113
    noIgual         shift and go to state 104

  ! +               [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .) ]
  ! -               [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .) ]
  ! *               [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .) ]
  ! /               [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .) ]
  ! %               [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .) ]
  ! y               [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .) ]
  ! <               [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .) ]
  ! menorIgual      [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .) ]
  ! >               [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .) ]
  ! mayorIgual      [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .) ]
  ! comparador      [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .) ]
  ! noIgual         [ reduce using rule 79 (BINARY_EXPRESSION -> EXPRESSION o EXPRESSION .) ]
  ! .               [ shift and go to state 126 ]
  ! o               [ shift and go to state 112 ]


state 143

    (84) BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ,               reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .)
    .               reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .)
    y               reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .)
    o               reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .)
    comparador      reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .)
    noIgual         reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .)
    )               reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .)
    ;               reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .)
    ]               reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .)
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111

  ! +               [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .) ]
  ! -               [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .) ]
  ! *               [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .) ]
  ! /               [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .) ]
  ! %               [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .) ]
  ! <               [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .) ]
  ! menorIgual      [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .) ]
  ! >               [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .) ]
  ! mayorIgual      [ reduce using rule 84 (BINARY_EXPRESSION -> EXPRESSION comparador EXPRESSION .) ]
  ! .               [ shift and go to state 126 ]
  ! y               [ shift and go to state 114 ]
  ! o               [ shift and go to state 112 ]
  ! comparador      [ shift and go to state 113 ]
  ! noIgual         [ shift and go to state 104 ]


state 144

    (78) BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ,               reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .)
    .               reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .)
    y               reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .)
    o               reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .)
    )               reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .)
    ;               reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .)
    ]               reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .)
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111
    comparador      shift and go to state 113
    noIgual         shift and go to state 104

  ! +               [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .) ]
  ! -               [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .) ]
  ! *               [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .) ]
  ! /               [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .) ]
  ! %               [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .) ]
  ! <               [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .) ]
  ! menorIgual      [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .) ]
  ! >               [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .) ]
  ! mayorIgual      [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .) ]
  ! comparador      [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .) ]
  ! noIgual         [ reduce using rule 78 (BINARY_EXPRESSION -> EXPRESSION y EXPRESSION .) ]
  ! .               [ shift and go to state 126 ]
  ! y               [ shift and go to state 114 ]
  ! o               [ shift and go to state 112 ]


state 145

    (81) BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ,               reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .)
    .               reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .)
    y               reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .)
    o               reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .)
    <               reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .)
    menorIgual      reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .)
    >               reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .)
    mayorIgual      reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .)
    comparador      reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .)
    noIgual         reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .)
    )               reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .)
    ;               reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .)
    ]               reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .)
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103

  ! +               [ reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .) ]
  ! -               [ reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .) ]
  ! *               [ reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .) ]
  ! /               [ reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .) ]
  ! %               [ reduce using rule 81 (BINARY_EXPRESSION -> EXPRESSION menorIgual EXPRESSION .) ]
  ! .               [ shift and go to state 126 ]
  ! y               [ shift and go to state 114 ]
  ! o               [ shift and go to state 112 ]
  ! <               [ shift and go to state 105 ]
  ! menorIgual      [ shift and go to state 115 ]
  ! >               [ shift and go to state 116 ]
  ! mayorIgual      [ shift and go to state 111 ]
  ! comparador      [ shift and go to state 113 ]
  ! noIgual         [ shift and go to state 104 ]


state 146

    (82) BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ,               reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .)
    .               reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .)
    y               reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .)
    o               reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .)
    <               reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .)
    menorIgual      reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .)
    >               reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .)
    mayorIgual      reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .)
    comparador      reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .)
    noIgual         reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .)
    )               reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .)
    ;               reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .)
    ]               reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .)
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103

  ! +               [ reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .) ]
  ! -               [ reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .) ]
  ! *               [ reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .) ]
  ! /               [ reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .) ]
  ! %               [ reduce using rule 82 (BINARY_EXPRESSION -> EXPRESSION > EXPRESSION .) ]
  ! .               [ shift and go to state 126 ]
  ! y               [ shift and go to state 114 ]
  ! o               [ shift and go to state 112 ]
  ! <               [ shift and go to state 105 ]
  ! menorIgual      [ shift and go to state 115 ]
  ! >               [ shift and go to state 116 ]
  ! mayorIgual      [ shift and go to state 111 ]
  ! comparador      [ shift and go to state 113 ]
  ! noIgual         [ shift and go to state 104 ]


state 147

    (57) CALL -> METHOD ( ) .

    ;               reduce using rule 57 (CALL -> METHOD ( ) .)
    .               reduce using rule 57 (CALL -> METHOD ( ) .)
    +               reduce using rule 57 (CALL -> METHOD ( ) .)
    -               reduce using rule 57 (CALL -> METHOD ( ) .)
    *               reduce using rule 57 (CALL -> METHOD ( ) .)
    /               reduce using rule 57 (CALL -> METHOD ( ) .)
    %               reduce using rule 57 (CALL -> METHOD ( ) .)
    y               reduce using rule 57 (CALL -> METHOD ( ) .)
    o               reduce using rule 57 (CALL -> METHOD ( ) .)
    <               reduce using rule 57 (CALL -> METHOD ( ) .)
    menorIgual      reduce using rule 57 (CALL -> METHOD ( ) .)
    >               reduce using rule 57 (CALL -> METHOD ( ) .)
    mayorIgual      reduce using rule 57 (CALL -> METHOD ( ) .)
    comparador      reduce using rule 57 (CALL -> METHOD ( ) .)
    noIgual         reduce using rule 57 (CALL -> METHOD ( ) .)
    )               reduce using rule 57 (CALL -> METHOD ( ) .)
    ]               reduce using rule 57 (CALL -> METHOD ( ) .)
    ,               reduce using rule 57 (CALL -> METHOD ( ) .)


state 148

    (60) ACTUALS -> EXPRESSION .
    (61) ACTUALS -> EXPRESSION . , ACTUALS
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    )               reduce using rule 60 (ACTUALS -> EXPRESSION .)
    ,               shift and go to state 159
    .               shift and go to state 126
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    y               shift and go to state 114
    o               shift and go to state 112
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111
    comparador      shift and go to state 113
    noIgual         shift and go to state 104


state 149

    (56) CALL -> METHOD ( ACTUALS . )

    )               shift and go to state 160


state 150

    (48) STATEMENT -> while ( EXPRESSION . ) STATEMENT
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    )               shift and go to state 161
    .               shift and go to state 126
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    y               shift and go to state 114
    o               shift and go to state 112
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111
    comparador      shift and go to state 113
    noIgual         shift and go to state 104


state 151

    (38) LIST_IDS_EXPRESSIONS -> , . id
    (39) LIST_IDS_EXPRESSIONS -> , . id = EXPRESSION
    (40) LIST_IDS_EXPRESSIONS -> , . id LIST_IDS_EXPRESSIONS
    (41) LIST_IDS_EXPRESSIONS -> , . id = EXPRESSION LIST_IDS_EXPRESSIONS

    id              shift and go to state 162


state 152

    (34) VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS . ;

    ;               shift and go to state 163


state 153

    (35) VAR_DECL -> TYPE id ; .

    return          reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    if              reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    while           reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    break           reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    continue        reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    int             reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    boolean         reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    string          reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    id              reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    {               reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    this            reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    new             reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    !               reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    -               reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    (               reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    numero          reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    binario         reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    hexa            reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    cientifico      reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    cadenaCaracteres reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    true            reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    false           reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    null            reduce using rule 35 (VAR_DECL -> TYPE id ; .)
    }               reduce using rule 35 (VAR_DECL -> TYPE id ; .)


state 154

    (36) VAR_DECL -> TYPE id = . EXPRESSION LIST_IDS_EXPRESSIONS ;
    (37) VAR_DECL -> TYPE id = . EXPRESSION ;
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 164
    METHOD                         shift and go to state 76

state 155

    (55) LOCATION -> id [ EXPRESSION ] .

    .               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    +               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    -               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    *               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    /               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    %               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    y               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    o               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    <               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    menorIgual      reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    >               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    mayorIgual      reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    comparador      reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    noIgual         reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    )               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    ;               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    ]               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    ,               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)
    =               reduce using rule 55 (LOCATION -> id [ EXPRESSION ] .)


state 156

    (46) STATEMENT -> if ( EXPRESSION ) . STATEMENT else STATEMENT
    (47) STATEMENT -> if ( EXPRESSION ) . STATEMENT
    (42) STATEMENT -> . ASSIGN ;
    (43) STATEMENT -> . CALL ;
    (44) STATEMENT -> . return EXPRESSION ;
    (45) STATEMENT -> . return ;
    (46) STATEMENT -> . if ( EXPRESSION ) STATEMENT else STATEMENT
    (47) STATEMENT -> . if ( EXPRESSION ) STATEMENT
    (48) STATEMENT -> . while ( EXPRESSION ) STATEMENT
    (49) STATEMENT -> . break ;
    (50) STATEMENT -> . continue ;
    (51) STATEMENT -> . BLOCK
    (52) ASSIGN -> . LOCATION = EXPRESSION
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (28) BLOCK -> . { }
    (29) BLOCK -> . { VAR_DECL_STATEMENTS_LIST }
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null

    return          shift and go to state 65
    if              shift and go to state 56
    while           shift and go to state 78
    break           shift and go to state 68
    continue        shift and go to state 79
    {               shift and go to state 44
    id              shift and go to state 88
    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    METHOD                         shift and go to state 76
    CALL                           shift and go to state 80
    LOCATION                       shift and go to state 62
    STATEMENT                      shift and go to state 165
    EXPRESSION                     shift and go to state 74
    ASSIGN                         shift and go to state 64
    BLOCK                          shift and go to state 55

state 157

    (66) EXPRESSION -> new TYPE [ EXPRESSION . ]
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id

    ]               shift and go to state 166
    .               shift and go to state 126
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    y               shift and go to state 114
    o               shift and go to state 112
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111
    comparador      shift and go to state 113
    noIgual         shift and go to state 104


state 158

    (65) EXPRESSION -> new id ( ) .

    .               reduce using rule 65 (EXPRESSION -> new id ( ) .)
    +               reduce using rule 65 (EXPRESSION -> new id ( ) .)
    -               reduce using rule 65 (EXPRESSION -> new id ( ) .)
    *               reduce using rule 65 (EXPRESSION -> new id ( ) .)
    /               reduce using rule 65 (EXPRESSION -> new id ( ) .)
    %               reduce using rule 65 (EXPRESSION -> new id ( ) .)
    y               reduce using rule 65 (EXPRESSION -> new id ( ) .)
    o               reduce using rule 65 (EXPRESSION -> new id ( ) .)
    <               reduce using rule 65 (EXPRESSION -> new id ( ) .)
    menorIgual      reduce using rule 65 (EXPRESSION -> new id ( ) .)
    >               reduce using rule 65 (EXPRESSION -> new id ( ) .)
    mayorIgual      reduce using rule 65 (EXPRESSION -> new id ( ) .)
    comparador      reduce using rule 65 (EXPRESSION -> new id ( ) .)
    noIgual         reduce using rule 65 (EXPRESSION -> new id ( ) .)
    )               reduce using rule 65 (EXPRESSION -> new id ( ) .)
    ;               reduce using rule 65 (EXPRESSION -> new id ( ) .)
    ]               reduce using rule 65 (EXPRESSION -> new id ( ) .)
    ,               reduce using rule 65 (EXPRESSION -> new id ( ) .)


state 159

    (61) ACTUALS -> EXPRESSION , . ACTUALS
    (60) ACTUALS -> . EXPRESSION
    (61) ACTUALS -> . EXPRESSION , ACTUALS
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    ACTUALS                        shift and go to state 167
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 148
    METHOD                         shift and go to state 76

state 160

    (56) CALL -> METHOD ( ACTUALS ) .

    ;               reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    .               reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    +               reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    -               reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    *               reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    /               reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    %               reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    y               reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    o               reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    <               reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    menorIgual      reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    >               reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    mayorIgual      reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    comparador      reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    noIgual         reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    )               reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    ]               reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)
    ,               reduce using rule 56 (CALL -> METHOD ( ACTUALS ) .)


state 161

    (48) STATEMENT -> while ( EXPRESSION ) . STATEMENT
    (42) STATEMENT -> . ASSIGN ;
    (43) STATEMENT -> . CALL ;
    (44) STATEMENT -> . return EXPRESSION ;
    (45) STATEMENT -> . return ;
    (46) STATEMENT -> . if ( EXPRESSION ) STATEMENT else STATEMENT
    (47) STATEMENT -> . if ( EXPRESSION ) STATEMENT
    (48) STATEMENT -> . while ( EXPRESSION ) STATEMENT
    (49) STATEMENT -> . break ;
    (50) STATEMENT -> . continue ;
    (51) STATEMENT -> . BLOCK
    (52) ASSIGN -> . LOCATION = EXPRESSION
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (28) BLOCK -> . { }
    (29) BLOCK -> . { VAR_DECL_STATEMENTS_LIST }
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null

    return          shift and go to state 65
    if              shift and go to state 56
    while           shift and go to state 78
    break           shift and go to state 68
    continue        shift and go to state 79
    {               shift and go to state 44
    id              shift and go to state 88
    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    METHOD                         shift and go to state 76
    CALL                           shift and go to state 80
    LOCATION                       shift and go to state 62
    STATEMENT                      shift and go to state 168
    EXPRESSION                     shift and go to state 74
    ASSIGN                         shift and go to state 64
    BLOCK                          shift and go to state 55

state 162

    (38) LIST_IDS_EXPRESSIONS -> , id .
    (39) LIST_IDS_EXPRESSIONS -> , id . = EXPRESSION
    (40) LIST_IDS_EXPRESSIONS -> , id . LIST_IDS_EXPRESSIONS
    (41) LIST_IDS_EXPRESSIONS -> , id . = EXPRESSION LIST_IDS_EXPRESSIONS
    (38) LIST_IDS_EXPRESSIONS -> . , id
    (39) LIST_IDS_EXPRESSIONS -> . , id = EXPRESSION
    (40) LIST_IDS_EXPRESSIONS -> . , id LIST_IDS_EXPRESSIONS
    (41) LIST_IDS_EXPRESSIONS -> . , id = EXPRESSION LIST_IDS_EXPRESSIONS

    ;               reduce using rule 38 (LIST_IDS_EXPRESSIONS -> , id .)
    =               shift and go to state 170
    ,               shift and go to state 151

    LIST_IDS_EXPRESSIONS           shift and go to state 169

state 163

    (34) VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .

    return          reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    if              reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    while           reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    break           reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    continue        reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    int             reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    boolean         reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    string          reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    id              reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    {               reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    this            reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    new             reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    !               reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    -               reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    (               reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    numero          reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    binario         reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    hexa            reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    cientifico      reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    cadenaCaracteres reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    true            reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    false           reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    null            reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)
    }               reduce using rule 34 (VAR_DECL -> TYPE id LIST_IDS_EXPRESSIONS ; .)


state 164

    (36) VAR_DECL -> TYPE id = EXPRESSION . LIST_IDS_EXPRESSIONS ;
    (37) VAR_DECL -> TYPE id = EXPRESSION . ;
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id
    (38) LIST_IDS_EXPRESSIONS -> . , id
    (39) LIST_IDS_EXPRESSIONS -> . , id = EXPRESSION
    (40) LIST_IDS_EXPRESSIONS -> . , id LIST_IDS_EXPRESSIONS
    (41) LIST_IDS_EXPRESSIONS -> . , id = EXPRESSION LIST_IDS_EXPRESSIONS

    ;               shift and go to state 172
    .               shift and go to state 126
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    y               shift and go to state 114
    o               shift and go to state 112
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111
    comparador      shift and go to state 113
    noIgual         shift and go to state 104
    ,               shift and go to state 151

    LIST_IDS_EXPRESSIONS           shift and go to state 171

state 165

    (46) STATEMENT -> if ( EXPRESSION ) STATEMENT . else STATEMENT
    (47) STATEMENT -> if ( EXPRESSION ) STATEMENT .

    else            reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    return          reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    if              reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    while           reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    break           reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    continue        reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    int             reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    boolean         reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    string          reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    id              reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    {               reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    this            reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    new             reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    !               reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    -               reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    (               reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    numero          reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    binario         reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    hexa            reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    cientifico      reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    cadenaCaracteres reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    true            reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    false           reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    null            reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)
    }               reduce using rule 47 (STATEMENT -> if ( EXPRESSION ) STATEMENT .)

  ! else            [ shift and go to state 173 ]


state 166

    (66) EXPRESSION -> new TYPE [ EXPRESSION ] .

    .               reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    +               reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    -               reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    *               reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    /               reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    %               reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    y               reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    o               reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    <               reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    menorIgual      reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    >               reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    mayorIgual      reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    comparador      reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    noIgual         reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    )               reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    ;               reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    ]               reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)
    ,               reduce using rule 66 (EXPRESSION -> new TYPE [ EXPRESSION ] .)


state 167

    (61) ACTUALS -> EXPRESSION , ACTUALS .

    )               reduce using rule 61 (ACTUALS -> EXPRESSION , ACTUALS .)


state 168

    (48) STATEMENT -> while ( EXPRESSION ) STATEMENT .

    else            reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    return          reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    if              reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    while           reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    break           reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    continue        reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    int             reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    boolean         reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    string          reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    id              reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    {               reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    this            reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    new             reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    !               reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    -               reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    (               reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    numero          reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    binario         reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    hexa            reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    cientifico      reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    cadenaCaracteres reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    true            reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    false           reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    null            reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)
    }               reduce using rule 48 (STATEMENT -> while ( EXPRESSION ) STATEMENT .)


state 169

    (40) LIST_IDS_EXPRESSIONS -> , id LIST_IDS_EXPRESSIONS .

    ;               reduce using rule 40 (LIST_IDS_EXPRESSIONS -> , id LIST_IDS_EXPRESSIONS .)


state 170

    (39) LIST_IDS_EXPRESSIONS -> , id = . EXPRESSION
    (41) LIST_IDS_EXPRESSIONS -> , id = . EXPRESSION LIST_IDS_EXPRESSIONS
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id

    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    id              shift and go to state 88
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    CALL                           shift and go to state 91
    LOCATION                       shift and go to state 89
    EXPRESSION                     shift and go to state 174
    METHOD                         shift and go to state 76

state 171

    (36) VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS . ;

    ;               shift and go to state 175


state 172

    (37) VAR_DECL -> TYPE id = EXPRESSION ; .

    return          reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    if              reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    while           reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    break           reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    continue        reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    int             reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    boolean         reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    string          reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    id              reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    {               reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    this            reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    new             reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    !               reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    -               reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    (               reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    numero          reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    binario         reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    hexa            reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    cientifico      reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    cadenaCaracteres reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    true            reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    false           reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    null            reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)
    }               reduce using rule 37 (VAR_DECL -> TYPE id = EXPRESSION ; .)


state 173

    (46) STATEMENT -> if ( EXPRESSION ) STATEMENT else . STATEMENT
    (42) STATEMENT -> . ASSIGN ;
    (43) STATEMENT -> . CALL ;
    (44) STATEMENT -> . return EXPRESSION ;
    (45) STATEMENT -> . return ;
    (46) STATEMENT -> . if ( EXPRESSION ) STATEMENT else STATEMENT
    (47) STATEMENT -> . if ( EXPRESSION ) STATEMENT
    (48) STATEMENT -> . while ( EXPRESSION ) STATEMENT
    (49) STATEMENT -> . break ;
    (50) STATEMENT -> . continue ;
    (51) STATEMENT -> . BLOCK
    (52) ASSIGN -> . LOCATION = EXPRESSION
    (56) CALL -> . METHOD ( ACTUALS )
    (57) CALL -> . METHOD ( )
    (28) BLOCK -> . { }
    (29) BLOCK -> . { VAR_DECL_STATEMENTS_LIST }
    (53) LOCATION -> . id
    (54) LOCATION -> . EXPRESSION . id
    (55) LOCATION -> . id [ EXPRESSION ]
    (58) METHOD -> . id
    (59) METHOD -> . EXPRESSION . id
    (62) EXPRESSION -> . LOCATION
    (63) EXPRESSION -> . CALL
    (64) EXPRESSION -> . this
    (65) EXPRESSION -> . new id ( )
    (66) EXPRESSION -> . new TYPE [ EXPRESSION ]
    (67) EXPRESSION -> . EXPRESSION . length
    (68) EXPRESSION -> . BINARY_EXPRESSION
    (69) EXPRESSION -> . ! EXPRESSION
    (70) EXPRESSION -> . - EXPRESSION
    (71) EXPRESSION -> . LITERAL
    (72) EXPRESSION -> . ( EXPRESSION )
    (73) BINARY_EXPRESSION -> . EXPRESSION + EXPRESSION
    (74) BINARY_EXPRESSION -> . EXPRESSION - EXPRESSION
    (75) BINARY_EXPRESSION -> . EXPRESSION * EXPRESSION
    (76) BINARY_EXPRESSION -> . EXPRESSION / EXPRESSION
    (77) BINARY_EXPRESSION -> . EXPRESSION % EXPRESSION
    (78) BINARY_EXPRESSION -> . EXPRESSION y EXPRESSION
    (79) BINARY_EXPRESSION -> . EXPRESSION o EXPRESSION
    (80) BINARY_EXPRESSION -> . EXPRESSION < EXPRESSION
    (81) BINARY_EXPRESSION -> . EXPRESSION menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> . EXPRESSION > EXPRESSION
    (83) BINARY_EXPRESSION -> . EXPRESSION mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> . EXPRESSION comparador EXPRESSION
    (85) BINARY_EXPRESSION -> . EXPRESSION noIgual EXPRESSION
    (86) LITERAL -> . numero
    (87) LITERAL -> . binario
    (88) LITERAL -> . hexa
    (89) LITERAL -> . cientifico
    (90) LITERAL -> . cadenaCaracteres
    (91) LITERAL -> . true
    (92) LITERAL -> . false
    (93) LITERAL -> . null

    return          shift and go to state 65
    if              shift and go to state 56
    while           shift and go to state 78
    break           shift and go to state 68
    continue        shift and go to state 79
    {               shift and go to state 44
    id              shift and go to state 88
    this            shift and go to state 73
    new             shift and go to state 63
    !               shift and go to state 57
    -               shift and go to state 61
    (               shift and go to state 60
    numero          shift and go to state 70
    binario         shift and go to state 52
    hexa            shift and go to state 77
    cientifico      shift and go to state 53
    cadenaCaracteres shift and go to state 72
    true            shift and go to state 58
    false           shift and go to state 51
    null            shift and go to state 66

    BINARY_EXPRESSION              shift and go to state 59
    LITERAL                        shift and go to state 69
    METHOD                         shift and go to state 76
    CALL                           shift and go to state 80
    LOCATION                       shift and go to state 62
    STATEMENT                      shift and go to state 176
    EXPRESSION                     shift and go to state 74
    ASSIGN                         shift and go to state 64
    BLOCK                          shift and go to state 55

state 174

    (39) LIST_IDS_EXPRESSIONS -> , id = EXPRESSION .
    (41) LIST_IDS_EXPRESSIONS -> , id = EXPRESSION . LIST_IDS_EXPRESSIONS
    (67) EXPRESSION -> EXPRESSION . . length
    (54) LOCATION -> EXPRESSION . . id
    (73) BINARY_EXPRESSION -> EXPRESSION . + EXPRESSION
    (74) BINARY_EXPRESSION -> EXPRESSION . - EXPRESSION
    (75) BINARY_EXPRESSION -> EXPRESSION . * EXPRESSION
    (76) BINARY_EXPRESSION -> EXPRESSION . / EXPRESSION
    (77) BINARY_EXPRESSION -> EXPRESSION . % EXPRESSION
    (78) BINARY_EXPRESSION -> EXPRESSION . y EXPRESSION
    (79) BINARY_EXPRESSION -> EXPRESSION . o EXPRESSION
    (80) BINARY_EXPRESSION -> EXPRESSION . < EXPRESSION
    (81) BINARY_EXPRESSION -> EXPRESSION . menorIgual EXPRESSION
    (82) BINARY_EXPRESSION -> EXPRESSION . > EXPRESSION
    (83) BINARY_EXPRESSION -> EXPRESSION . mayorIgual EXPRESSION
    (84) BINARY_EXPRESSION -> EXPRESSION . comparador EXPRESSION
    (85) BINARY_EXPRESSION -> EXPRESSION . noIgual EXPRESSION
    (59) METHOD -> EXPRESSION . . id
    (38) LIST_IDS_EXPRESSIONS -> . , id
    (39) LIST_IDS_EXPRESSIONS -> . , id = EXPRESSION
    (40) LIST_IDS_EXPRESSIONS -> . , id LIST_IDS_EXPRESSIONS
    (41) LIST_IDS_EXPRESSIONS -> . , id = EXPRESSION LIST_IDS_EXPRESSIONS

    ;               reduce using rule 39 (LIST_IDS_EXPRESSIONS -> , id = EXPRESSION .)
    .               shift and go to state 126
    +               shift and go to state 106
    -               shift and go to state 108
    *               shift and go to state 107
    /               shift and go to state 109
    %               shift and go to state 103
    y               shift and go to state 114
    o               shift and go to state 112
    <               shift and go to state 105
    menorIgual      shift and go to state 115
    >               shift and go to state 116
    mayorIgual      shift and go to state 111
    comparador      shift and go to state 113
    noIgual         shift and go to state 104
    ,               shift and go to state 151

    LIST_IDS_EXPRESSIONS           shift and go to state 177

state 175

    (36) VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .

    return          reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    if              reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    while           reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    break           reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    continue        reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    int             reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    boolean         reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    string          reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    id              reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    {               reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    this            reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    new             reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    !               reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    -               reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    (               reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    numero          reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    binario         reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    hexa            reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    cientifico      reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    cadenaCaracteres reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    true            reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    false           reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    null            reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)
    }               reduce using rule 36 (VAR_DECL -> TYPE id = EXPRESSION LIST_IDS_EXPRESSIONS ; .)


state 176

    (46) STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .

    else            reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    return          reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    if              reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    while           reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    break           reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    continue        reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    int             reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    boolean         reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    string          reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    id              reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    {               reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    this            reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    new             reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    !               reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    -               reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    (               reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    numero          reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    binario         reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    hexa            reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    cientifico      reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    cadenaCaracteres reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    true            reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    false           reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    null            reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)
    }               reduce using rule 46 (STATEMENT -> if ( EXPRESSION ) STATEMENT else STATEMENT .)


state 177

    (41) LIST_IDS_EXPRESSIONS -> , id = EXPRESSION LIST_IDS_EXPRESSIONS .

    ;               reduce using rule 41 (LIST_IDS_EXPRESSIONS -> , id = EXPRESSION LIST_IDS_EXPRESSIONS .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for [ in state 54 resolved as shift
